// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Main.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Main.Sys.init$RET.0)
//function Main.T3 0
(Main.T3)
//call  Main.t1 0
@Main.Main.t1$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t1
0;JMP
(Main.Main.t1$RET.1)
//call  Main.t2 0
@Main.Main.t2$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t2
0;JMP
(Main.Main.t2$RET.2)
//call  Main.t3 0
@Main.Main.t3$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t3
0;JMP
(Main.Main.t3$RET.3)
//call  Main.t4 0
@Main.Main.t4$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t4
0;JMP
(Main.Main.t4$RET.4)
//label WHILE
(Main.T3$WHILE)
//goto WHILE
@Main.T3$WHILE
0;JMP
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Main.t1 0
(Main.t1)
//push constant 32767
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push constant 32767
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Main0
D;JLT
@SP
A=M-1
D=M
@XLTY.Main0
D;JLT
(XMINUSY.Main0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Main0
D;JLT
(XGEY.Main0)
@SP
A=M-1
D=M
M=0
@END.Main0
0;JMP
(YLT.Main0)
@SP
A=M-1
D=M
@XMINUSY.Main0
D;JLT
@XGEY.Main0
0;JMP
(XLTY.Main0)
@SP
A=M-1
M=-1
(END.Main0)
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Main.t2 0
(Main.t2)
//push constant 32767
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 32767
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Main1
D;JGT
@SP
A=M-1
D=M
@XGTY.Main1
D;JGT
(XMINUSY.Main1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Main1
D;JGT
(XLEY.Main1)
@SP
A=M-1
D=M
M=0
@END.Main1
0;JMP
(YGT.Main1)
@SP
A=M-1
D=M
@XMINUSY.Main1
D;JGT
@XLEY.Main1
0;JMP
(XGTY.Main1)
@SP
A=M-1
M=-1
(END.Main1)
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Main.t3 0
(Main.t3)
//push constant 20000
@20000
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push constant 30000
@30000
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Main2
D;JGT
@SP
A=M-1
D=M
@XGTY.Main2
D;JGT
(XMINUSY.Main2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Main2
D;JGT
(XLEY.Main2)
@SP
A=M-1
D=M
M=0
@END.Main2
0;JMP
(YGT.Main2)
@SP
A=M-1
D=M
@XMINUSY.Main2
D;JGT
@XLEY.Main2
0;JMP
(XGTY.Main2)
@SP
A=M-1
M=-1
(END.Main2)
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Main.t4 0
(Main.t4)
//push constant 20000
@20000
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30000
@30000
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Main3
D;JGT
@SP
A=M-1
D=M
@XGTY.Main3
D;JGT
(XMINUSY.Main3)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Main3
D;JGT
(XLEY.Main3)
@SP
A=M-1
D=M
M=0
@END.Main3
0;JMP
(YGT.Main3)
@SP
A=M-1
D=M
@XMINUSY.Main3
D;JGT
@XLEY.Main3
0;JMP
(XGTY.Main3)
@SP
A=M-1
M=-1
(END.Main3)
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Sys.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.Sys.init$RET.0)
//function Sys.init 0
(Sys.init)
//call  Main.T3 0
@Sys.Main.T3$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.T3
0;JMP
(Sys.Main.T3$RET.1)
//label WHILE
(Sys.init$WHILE)
//goto WHILE
@Sys.init$WHILE
0;JMP

// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Array.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Array.Sys.init$RET.0)
//function Array.new 0
(Array.new)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Array0
D;JGT
@SP
A=M-1
D=M
@XGTY.Array0
D;JGT
(XMINUSY.Array0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Array0
D;JGT
(XLEY.Array0)
@SP
A=M-1
D=M
M=0
@END.Array0
0;JMP
(YGT.Array0)
@SP
A=M-1
D=M
@XMINUSY.Array0
D;JGT
@XLEY.Array0
0;JMP
(XGTY.Array0)
@SP
A=M-1
M=-1
(END.Array0)
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Array.new$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Array.new$IF_FALSE0
0;JMP
//label IF_TRUE0
(Array.new$IF_TRUE0)
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Array.Sys.error$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Array.Sys.error$RET.1)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Array.new$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Memory.alloc 1
@Array.Memory.alloc$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Array.Memory.alloc$RET.2)
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Array.dispose 0
(Array.dispose)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Memory.deAlloc 1
@Array.Memory.deAlloc$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Array.Memory.deAlloc$RET.3)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Ball.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Ball.Sys.init$RET.0)
//function Ball.new 0
(Ball.new)
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//call  Memory.alloc 1
@Ball.Memory.alloc$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Ball.Memory.alloc$RET.1)
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 10
@THIS
D=M
@10
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 11
@THIS
D=M
@11
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 4
@ARG
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 12
@THIS
D=M
@12
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 5
@ARG
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 13
@THIS
D=M
@13
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.show 1
@Ball.Ball.show$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.show
0;JMP
(Ball.Ball.show$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.dispose 0
(Ball.dispose)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Memory.deAlloc 1
@Ball.Memory.deAlloc$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Ball.Memory.deAlloc$RET.3)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.show 0
(Ball.show)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//call  Screen.setColor 1
@Ball.Screen.setColor$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Ball.Screen.setColor$RET.4)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.draw 1
@Ball.Ball.draw$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.draw
0;JMP
(Ball.Ball.draw$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.hide 0
(Ball.hide)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Screen.setColor 1
@Ball.Screen.setColor$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Ball.Screen.setColor$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.draw 1
@Ball.Ball.draw$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.draw
0;JMP
(Ball.Ball.draw$RET.7)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.draw 0
(Ball.draw)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawRectangle 4
@Ball.Screen.drawRectangle$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Ball.Screen.drawRectangle$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.getLeft 0
(Ball.getLeft)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.getRight 0
(Ball.getRight)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.setDestination 3
(Ball.setDestination)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.abs 1
@Ball.Math.abs$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Ball.Math.abs$RET.9)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.abs 1
@Ball.Math.abs$RET.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Ball.Math.abs$RET.10)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball0
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball0
D;JLT
(XMINUSY.Ball0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball0
D;JLT
(XGEY.Ball0)
@SP
A=M-1
D=M
M=0
@END.Ball0
0;JMP
(YLT.Ball0)
@SP
A=M-1
D=M
@XMINUSY.Ball0
D;JLT
@XGEY.Ball0
0;JMP
(XLTY.Ball0)
@SP
A=M-1
M=-1
(END.Ball0)
//pop this 7
@THIS
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 7
@THIS
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Ball.setDestination$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Ball.setDestination$IF_FALSE0
0;JMP
//label IF_TRUE0
(Ball.setDestination$IF_TRUE0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball1
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball1
D;JLT
(XMINUSY.Ball1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball1
D;JLT
(XGEY.Ball1)
@SP
A=M-1
D=M
M=0
@END.Ball1
0;JMP
(YLT.Ball1)
@SP
A=M-1
D=M
@XMINUSY.Ball1
D;JLT
@XGEY.Ball1
0;JMP
(XLTY.Ball1)
@SP
A=M-1
M=-1
(END.Ball1)
//pop this 8
@THIS
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball2
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball2
D;JLT
(XMINUSY.Ball2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball2
D;JLT
(XGEY.Ball2)
@SP
A=M-1
D=M
M=0
@END.Ball2
0;JMP
(YLT.Ball2)
@SP
A=M-1
D=M
@XMINUSY.Ball2
D;JLT
@XGEY.Ball2
0;JMP
(XLTY.Ball2)
@SP
A=M-1
M=-1
(END.Ball2)
//pop this 9
@THIS
D=M
@9
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Ball.setDestination$IF_END0
0;JMP
//label IF_FALSE0
(Ball.setDestination$IF_FALSE0)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball3
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball3
D;JLT
(XMINUSY.Ball3)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball3
D;JLT
(XGEY.Ball3)
@SP
A=M-1
D=M
M=0
@END.Ball3
0;JMP
(YLT.Ball3)
@SP
A=M-1
D=M
@XMINUSY.Ball3
D;JLT
@XGEY.Ball3
0;JMP
(XLTY.Ball3)
@SP
A=M-1
M=-1
(END.Ball3)
//pop this 8
@THIS
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball4
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball4
D;JLT
(XMINUSY.Ball4)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball4
D;JLT
(XGEY.Ball4)
@SP
A=M-1
D=M
M=0
@END.Ball4
0;JMP
(YLT.Ball4)
@SP
A=M-1
D=M
@XMINUSY.Ball4
D;JLT
@XGEY.Ball4
0;JMP
(XLTY.Ball4)
@SP
A=M-1
M=-1
(END.Ball4)
//pop this 9
@THIS
D=M
@9
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END0
(Ball.setDestination$IF_END0)
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Ball.Math.multiply$RET.11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.11)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Ball.Math.multiply$RET.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.12)
//pop this 5
@THIS
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call  Math.multiply 2
@Ball.Math.multiply$RET.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.13)
//pop this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.move 0
(Ball.move)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.hide 1
@Ball.Ball.hide$RET.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.hide
0;JMP
(Ball.Ball.hide$RET.14)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 4
@THIS
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball5
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball5
D;JLT
(XMINUSY.Ball5)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball5
D;JLT
(XGEY.Ball5)
@SP
A=M-1
D=M
M=0
@END.Ball5
0;JMP
(YLT.Ball5)
@SP
A=M-1
D=M
@XMINUSY.Ball5
D;JLT
@XGEY.Ball5
0;JMP
(XLTY.Ball5)
@SP
A=M-1
M=-1
(END.Ball5)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Ball.move$IF_FALSE0
0;JMP
//label IF_TRUE0
(Ball.move$IF_TRUE0)
//push this 4
@THIS
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 5
@THIS
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Ball.move$IF_END0
0;JMP
//label IF_FALSE0
(Ball.move$IF_FALSE0)
//push this 4
@THIS
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 6
@THIS
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 9
@THIS
D=M
@9
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Ball.move$IF_FALSE1
0;JMP
//label IF_TRUE1
(Ball.move$IF_TRUE1)
//push this 7
@THIS
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Ball.move$IF_FALSE2
0;JMP
//label IF_TRUE2
(Ball.move$IF_TRUE2)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END2
@Ball.move$IF_END2
0;JMP
//label IF_FALSE2
(Ball.move$IF_FALSE2)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END2
(Ball.move$IF_END2)
//goto IF_END1
@Ball.move$IF_END1
0;JMP
//label IF_FALSE1
(Ball.move$IF_FALSE1)
//push this 7
@THIS
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE3
D;JNE
//goto IF_FALSE3
@Ball.move$IF_FALSE3
0;JMP
//label IF_TRUE3
(Ball.move$IF_TRUE3)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END3
@Ball.move$IF_END3
0;JMP
//label IF_FALSE3
(Ball.move$IF_FALSE3)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END3
(Ball.move$IF_END3)
//label IF_END1
(Ball.move$IF_END1)
//label IF_END0
(Ball.move$IF_END0)
//push this 8
@THIS
D=M
@8
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE4
D;JNE
//goto IF_FALSE4
@Ball.move$IF_FALSE4
0;JMP
//label IF_TRUE4
(Ball.move$IF_TRUE4)
//push this 7
@THIS
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE5
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE5
D;JNE
//goto IF_FALSE5
@Ball.move$IF_FALSE5
0;JMP
//label IF_TRUE5
(Ball.move$IF_TRUE5)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END5
@Ball.move$IF_END5
0;JMP
//label IF_FALSE5
(Ball.move$IF_FALSE5)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END5
(Ball.move$IF_END5)
//goto IF_END4
@Ball.move$IF_END4
0;JMP
//label IF_FALSE4
(Ball.move$IF_FALSE4)
//push this 7
@THIS
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE6
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE6
D;JNE
//goto IF_FALSE6
@Ball.move$IF_FALSE6
0;JMP
//label IF_TRUE6
(Ball.move$IF_TRUE6)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END6
@Ball.move$IF_END6
0;JMP
//label IF_FALSE6
(Ball.move$IF_FALSE6)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END6
(Ball.move$IF_END6)
//label IF_END4
(Ball.move$IF_END4)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 10
@THIS
D=M
@10
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Ball6
D;JGT
@SP
A=M-1
D=M
@XGTY.Ball6
D;JGT
(XMINUSY.Ball6)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Ball6
D;JGT
(XLEY.Ball6)
@SP
A=M-1
D=M
M=0
@END.Ball6
0;JMP
(YGT.Ball6)
@SP
A=M-1
D=M
@XMINUSY.Ball6
D;JGT
@XLEY.Ball6
0;JMP
(XGTY.Ball6)
@SP
A=M-1
M=-1
(END.Ball6)
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE7
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE7
D;JNE
//goto IF_FALSE7
@Ball.move$IF_FALSE7
0;JMP
//label IF_TRUE7
(Ball.move$IF_TRUE7)
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 10
@THIS
D=M
@10
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE7
(Ball.move$IF_FALSE7)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 11
@THIS
D=M
@11
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball7
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball7
D;JLT
(XMINUSY.Ball7)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball7
D;JLT
(XGEY.Ball7)
@SP
A=M-1
D=M
M=0
@END.Ball7
0;JMP
(YLT.Ball7)
@SP
A=M-1
D=M
@XMINUSY.Ball7
D;JLT
@XGEY.Ball7
0;JMP
(XLTY.Ball7)
@SP
A=M-1
M=-1
(END.Ball7)
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE8
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE8
D;JNE
//goto IF_FALSE8
@Ball.move$IF_FALSE8
0;JMP
//label IF_TRUE8
(Ball.move$IF_TRUE8)
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 11
@THIS
D=M
@11
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE8
(Ball.move$IF_FALSE8)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 12
@THIS
D=M
@12
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Ball8
D;JGT
@SP
A=M-1
D=M
@XGTY.Ball8
D;JGT
(XMINUSY.Ball8)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Ball8
D;JGT
(XLEY.Ball8)
@SP
A=M-1
D=M
M=0
@END.Ball8
0;JMP
(YGT.Ball8)
@SP
A=M-1
D=M
@XMINUSY.Ball8
D;JGT
@XLEY.Ball8
0;JMP
(XGTY.Ball8)
@SP
A=M-1
M=-1
(END.Ball8)
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE9
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE9
D;JNE
//goto IF_FALSE9
@Ball.move$IF_FALSE9
0;JMP
//label IF_TRUE9
(Ball.move$IF_TRUE9)
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 12
@THIS
D=M
@12
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE9
(Ball.move$IF_FALSE9)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 13
@THIS
D=M
@13
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball9
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball9
D;JLT
(XMINUSY.Ball9)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball9
D;JLT
(XGEY.Ball9)
@SP
A=M-1
D=M
M=0
@END.Ball9
0;JMP
(YLT.Ball9)
@SP
A=M-1
D=M
@XMINUSY.Ball9
D;JLT
@XGEY.Ball9
0;JMP
(XLTY.Ball9)
@SP
A=M-1
M=-1
(END.Ball9)
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE10
@SP
M=M-1
A=M
D=M

@Ball.move$IF_TRUE10
D;JNE
//goto IF_FALSE10
@Ball.move$IF_FALSE10
0;JMP
//label IF_TRUE10
(Ball.move$IF_TRUE10)
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 13
@THIS
D=M
@13
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE10
(Ball.move$IF_FALSE10)
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.show 1
@Ball.Ball.show$RET.15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.show
0;JMP
(Ball.Ball.show$RET.15)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 14
@THIS
D=M
@14
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Ball.bounce 5
(Ball.bounce)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Ball.Math.divide$RET.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$RET.16)
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Ball.Math.divide$RET.17
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$RET.17)
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Ball10
D;JNE
@SP
A=M-1
M=-1
(NEQ.Ball10)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Ball.bounce$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Ball.bounce$IF_FALSE0
0;JMP
//label IF_TRUE0
(Ball.bounce$IF_TRUE0)
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Ball.bounce$IF_END0
0;JMP
//label IF_FALSE0
(Ball.bounce$IF_FALSE0)
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball11
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball11
D;JLT
(XMINUSY.Ball11)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball11
D;JLT
(XGEY.Ball11)
@SP
A=M-1
D=M
M=0
@END.Ball11
0;JMP
(YLT.Ball11)
@SP
A=M-1
D=M
@XMINUSY.Ball11
D;JLT
@XGEY.Ball11
0;JMP
(XLTY.Ball11)
@SP
A=M-1
M=-1
(END.Ball11)
//not
@SP
A=M-1
M=!M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Ball12
D;JNE
@SP
A=M-1
M=-1
(NEQ.Ball12)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Ball13
D;JLT
@SP
A=M-1
D=M
@XLTY.Ball13
D;JLT
(XMINUSY.Ball13)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Ball13
D;JLT
(XGEY.Ball13)
@SP
A=M-1
D=M
M=0
@END.Ball13
0;JMP
(YLT.Ball13)
@SP
A=M-1
D=M
@XMINUSY.Ball13
D;JLT
@XGEY.Ball13
0;JMP
(XLTY.Ball13)
@SP
A=M-1
M=-1
(END.Ball13)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Ball14
D;JNE
@SP
A=M-1
M=-1
(NEQ.Ball14)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Ball.bounce$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Ball.bounce$IF_FALSE1
0;JMP
//label IF_TRUE1
(Ball.bounce$IF_TRUE1)
//push constant 20
@20
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END1
@Ball.bounce$IF_END1
0;JMP
//label IF_FALSE1
(Ball.bounce$IF_FALSE1)
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END1
(Ball.bounce$IF_END1)
//label IF_END0
(Ball.bounce$IF_END0)
//push this 14
@THIS
D=M
@14
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Ball15
D;JNE
@SP
A=M-1
M=-1
(NEQ.Ball15)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Ball.bounce$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Ball.bounce$IF_FALSE2
0;JMP
//label IF_TRUE2
(Ball.bounce$IF_TRUE2)
//push constant 506
@506
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//call  Math.multiply 2
@Ball.Math.multiply$RET.18
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.18)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Ball.Math.divide$RET.19
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$RET.19)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Ball.Math.multiply$RET.20
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.20)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END2
@Ball.bounce$IF_END2
0;JMP
//label IF_FALSE2
(Ball.bounce$IF_FALSE2)
//push this 14
@THIS
D=M
@14
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Ball16
D;JNE
@SP
A=M-1
M=-1
(NEQ.Ball16)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@Ball.bounce$IF_TRUE3
D;JNE
//goto IF_FALSE3
@Ball.bounce$IF_FALSE3
0;JMP
//label IF_TRUE3
(Ball.bounce$IF_TRUE3)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Ball.Math.multiply$RET.21
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.21)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Ball.Math.divide$RET.22
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$RET.22)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Ball.Math.multiply$RET.23
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.23)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END3
@Ball.bounce$IF_END3
0;JMP
//label IF_FALSE3
(Ball.bounce$IF_FALSE3)
//push this 14
@THIS
D=M
@14
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Ball17
D;JNE
@SP
A=M-1
M=-1
(NEQ.Ball17)
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M

@Ball.bounce$IF_TRUE4
D;JNE
//goto IF_FALSE4
@Ball.bounce$IF_FALSE4
0;JMP
//label IF_TRUE4
(Ball.bounce$IF_TRUE4)
//push constant 250
@250
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//call  Math.multiply 2
@Ball.Math.multiply$RET.24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.24)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Ball.Math.divide$RET.25
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$RET.25)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Ball.Math.multiply$RET.26
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.26)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END4
@Ball.bounce$IF_END4
0;JMP
//label IF_FALSE4
(Ball.bounce$IF_FALSE4)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Ball.Math.multiply$RET.27
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.27)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Ball.Math.divide$RET.28
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$RET.28)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Ball.Math.multiply$RET.29
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$RET.29)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END4
(Ball.bounce$IF_END4)
//label IF_END3
(Ball.bounce$IF_END3)
//label IF_END2
(Ball.bounce$IF_END2)
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.setDestination 3
@Ball.Ball.setDestination$RET.30
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@3
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.setDestination
0;JMP
(Ball.Ball.setDestination$RET.30)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Bat.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Bat.Sys.init$RET.0)
//function Bat.new 0
(Bat.new)
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//call  Memory.alloc 1
@Bat.Memory.alloc$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Bat.Memory.alloc$RET.1)
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.show 1
@Bat.Bat.show$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.show
0;JMP
(Bat.Bat.show$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.allign 1
(Bat.allign)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.dispose 0
(Bat.dispose)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Memory.deAlloc 1
@Bat.Memory.deAlloc$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Bat.Memory.deAlloc$RET.3)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.show 0
(Bat.show)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//call  Screen.setColor 1
@Bat.Screen.setColor$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$RET.4)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.draw 1
@Bat.Bat.draw$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.draw
0;JMP
(Bat.Bat.draw$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.hide 0
(Bat.hide)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Screen.setColor 1
@Bat.Screen.setColor$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.draw 1
@Bat.Bat.draw$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.draw
0;JMP
(Bat.Bat.draw$RET.7)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.draw 0
(Bat.draw)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawRectangle 4
@Bat.Screen.drawRectangle$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.setDirection 0
(Bat.setDirection)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.getLeft 0
(Bat.getLeft)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.getRight 0
(Bat.getRight)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.setWidth 0
(Bat.setWidth)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.hide 1
@Bat.Bat.hide$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.hide
0;JMP
(Bat.Bat.hide$RET.9)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.show 1
@Bat.Bat.show$RET.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.show
0;JMP
(Bat.Bat.show$RET.10)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Bat.move 0
(Bat.move)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 4
@THIS
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Bat0
D;JNE
@SP
A=M-1
M=-1
(NEQ.Bat0)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Bat.move$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Bat.move$IF_FALSE0
0;JMP
//label IF_TRUE0
(Bat.move$IF_TRUE0)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Bat1
D;JLT
@SP
A=M-1
D=M
@XLTY.Bat1
D;JLT
(XMINUSY.Bat1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Bat1
D;JLT
(XGEY.Bat1)
@SP
A=M-1
D=M
M=0
@END.Bat1
0;JMP
(YLT.Bat1)
@SP
A=M-1
D=M
@XMINUSY.Bat1
D;JLT
@XGEY.Bat1
0;JMP
(XLTY.Bat1)
@SP
A=M-1
M=-1
(END.Bat1)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Bat.move$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Bat.move$IF_FALSE1
0;JMP
//label IF_TRUE1
(Bat.move$IF_TRUE1)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(Bat.move$IF_FALSE1)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Screen.setColor 1
@Bat.Screen.setColor$RET.11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$RET.11)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawRectangle 4
@Bat.Screen.drawRectangle$RET.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$RET.12)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//call  Screen.setColor 1
@Bat.Screen.setColor$RET.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$RET.13)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawRectangle 4
@Bat.Screen.drawRectangle$RET.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$RET.14)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Bat.move$IF_END0
0;JMP
//label IF_FALSE0
(Bat.move$IF_FALSE0)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Bat2
D;JGT
@SP
A=M-1
D=M
@XGTY.Bat2
D;JGT
(XMINUSY.Bat2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Bat2
D;JGT
(XLEY.Bat2)
@SP
A=M-1
D=M
M=0
@END.Bat2
0;JMP
(YGT.Bat2)
@SP
A=M-1
D=M
@XMINUSY.Bat2
D;JGT
@XLEY.Bat2
0;JMP
(XGTY.Bat2)
@SP
A=M-1
M=-1
(END.Bat2)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Bat.move$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Bat.move$IF_FALSE2
0;JMP
//label IF_TRUE2
(Bat.move$IF_TRUE2)
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE2
(Bat.move$IF_FALSE2)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Screen.setColor 1
@Bat.Screen.setColor$RET.15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$RET.15)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawRectangle 4
@Bat.Screen.drawRectangle$RET.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$RET.16)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//call  Screen.setColor 1
@Bat.Screen.setColor$RET.17
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$RET.17)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawRectangle 4
@Bat.Screen.drawRectangle$RET.18
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$RET.18)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END0
(Bat.move$IF_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Board.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Board.Sys.init$RET.0)
//function Board.new 0
(Board.new)
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//call  Memory.alloc 1
@Board.Memory.alloc$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Board.Memory.alloc$RET.1)
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 0
@SP
M=M-1
A=M
D=M
@Board.0
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 1
@SP
M=M-1
A=M
D=M
@Board.1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Board.dispose 0
(Board.dispose)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Memory.deAlloc 1
@Board.Memory.deAlloc$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Board.Memory.deAlloc$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Board.draw 0
(Board.draw)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//call  Screen.setColor 1
@Board.Screen.setColor$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Board.Screen.setColor$RET.3)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Board.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Board.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawRectangle 4
@Board.Screen.drawRectangle$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Board.Screen.drawRectangle$RET.4)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Board.erase 0
(Board.erase)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Screen.setColor 1
@Board.Screen.setColor$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Board.Screen.setColor$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Board.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Board.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawRectangle 4
@Board.Screen.drawRectangle$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Board.Screen.drawRectangle$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Board.setX 0
(Board.setX)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Board.setY 0
(Board.setY)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Board.move 0
(Board.move)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Board.erase 1
@Board.Board.erase$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Board.erase
0;JMP
(Board.Board.erase$RET.7)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Board0
D;JNE
@SP
A=M-1
M=-1
(NEQ.Board0)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Board.move$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Board.move$IF_FALSE0
0;JMP
//label IF_TRUE0
(Board.move$IF_TRUE0)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Board1
D;JGT
@SP
A=M-1
D=M
@XGTY.Board1
D;JGT
(XMINUSY.Board1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Board1
D;JGT
(XLEY.Board1)
@SP
A=M-1
D=M
M=0
@END.Board1
0;JMP
(YGT.Board1)
@SP
A=M-1
D=M
@XMINUSY.Board1
D;JGT
@XLEY.Board1
0;JMP
(XGTY.Board1)
@SP
A=M-1
M=-1
(END.Board1)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Board.move$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Board.move$IF_FALSE1
0;JMP
//label IF_TRUE1
(Board.move$IF_TRUE1)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(Board.move$IF_FALSE1)
//label IF_FALSE0
(Board.move$IF_FALSE0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Board2
D;JNE
@SP
A=M-1
M=-1
(NEQ.Board2)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Board.move$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Board.move$IF_FALSE2
0;JMP
//label IF_TRUE2
(Board.move$IF_TRUE2)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 209
@209
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Board3
D;JLT
@SP
A=M-1
D=M
@XLTY.Board3
D;JLT
(XMINUSY.Board3)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Board3
D;JLT
(XGEY.Board3)
@SP
A=M-1
D=M
M=0
@END.Board3
0;JMP
(YLT.Board3)
@SP
A=M-1
D=M
@XMINUSY.Board3
D;JLT
@XGEY.Board3
0;JMP
(XLTY.Board3)
@SP
A=M-1
M=-1
(END.Board3)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@Board.move$IF_TRUE3
D;JNE
//goto IF_FALSE3
@Board.move$IF_FALSE3
0;JMP
//label IF_TRUE3
(Board.move$IF_TRUE3)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE3
(Board.move$IF_FALSE3)
//label IF_FALSE2
(Board.move$IF_FALSE2)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Board4
D;JNE
@SP
A=M-1
M=-1
(NEQ.Board4)
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M

@Board.move$IF_TRUE4
D;JNE
//goto IF_FALSE4
@Board.move$IF_FALSE4
0;JMP
//label IF_TRUE4
(Board.move$IF_TRUE4)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Board5
D;JGT
@SP
A=M-1
D=M
@XGTY.Board5
D;JGT
(XMINUSY.Board5)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Board5
D;JGT
(XLEY.Board5)
@SP
A=M-1
D=M
M=0
@END.Board5
0;JMP
(YGT.Board5)
@SP
A=M-1
D=M
@XMINUSY.Board5
D;JGT
@XLEY.Board5
0;JMP
(XGTY.Board5)
@SP
A=M-1
M=-1
(END.Board5)
//if-goto IF_TRUE5
@SP
M=M-1
A=M
D=M

@Board.move$IF_TRUE5
D;JNE
//goto IF_FALSE5
@Board.move$IF_FALSE5
0;JMP
//label IF_TRUE5
(Board.move$IF_TRUE5)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE5
(Board.move$IF_FALSE5)
//label IF_FALSE4
(Board.move$IF_FALSE4)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Board6
D;JNE
@SP
A=M-1
M=-1
(NEQ.Board6)
//if-goto IF_TRUE6
@SP
M=M-1
A=M
D=M

@Board.move$IF_TRUE6
D;JNE
//goto IF_FALSE6
@Board.move$IF_FALSE6
0;JMP
//label IF_TRUE6
(Board.move$IF_TRUE6)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 500
@500
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Board7
D;JLT
@SP
A=M-1
D=M
@XLTY.Board7
D;JLT
(XMINUSY.Board7)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Board7
D;JLT
(XGEY.Board7)
@SP
A=M-1
D=M
M=0
@END.Board7
0;JMP
(YLT.Board7)
@SP
A=M-1
D=M
@XMINUSY.Board7
D;JLT
@XGEY.Board7
0;JMP
(XLTY.Board7)
@SP
A=M-1
M=-1
(END.Board7)
//if-goto IF_TRUE7
@SP
M=M-1
A=M
D=M

@Board.move$IF_TRUE7
D;JNE
//goto IF_FALSE7
@Board.move$IF_FALSE7
0;JMP
//label IF_TRUE7
(Board.move$IF_TRUE7)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE7
(Board.move$IF_FALSE7)
//label IF_FALSE6
(Board.move$IF_FALSE6)
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Board.draw 1
@Board.Board.draw$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Board.draw
0;JMP
(Board.Board.draw$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Board.isHit 2
(Board.isHit)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Board.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Board.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Board8
D;JGT
@SP
A=M-1
D=M
@XGTY.Board8
D;JGT
(XMINUSY.Board8)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Board8
D;JGT
(XLEY.Board8)
@SP
A=M-1
D=M
M=0
@END.Board8
0;JMP
(YGT.Board8)
@SP
A=M-1
D=M
@XMINUSY.Board8
D;JGT
@XLEY.Board8
0;JMP
(XGTY.Board8)
@SP
A=M-1
M=-1
(END.Board8)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Board.isHit$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Board.isHit$IF_FALSE0
0;JMP
//label IF_TRUE0
(Board.isHit$IF_TRUE0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Board9
D;JLT
@SP
A=M-1
D=M
@XLTY.Board9
D;JLT
(XMINUSY.Board9)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Board9
D;JLT
(XGEY.Board9)
@SP
A=M-1
D=M
M=0
@END.Board9
0;JMP
(YLT.Board9)
@SP
A=M-1
D=M
@XMINUSY.Board9
D;JLT
@XGEY.Board9
0;JMP
(XLTY.Board9)
@SP
A=M-1
M=-1
(END.Board9)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Board.isHit$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Board.isHit$IF_FALSE1
0;JMP
//label IF_TRUE1
(Board.isHit$IF_TRUE1)
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Board10
D;JGT
@SP
A=M-1
D=M
@XGTY.Board10
D;JGT
(XMINUSY.Board10)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Board10
D;JGT
(XLEY.Board10)
@SP
A=M-1
D=M
M=0
@END.Board10
0;JMP
(YGT.Board10)
@SP
A=M-1
D=M
@XMINUSY.Board10
D;JGT
@XLEY.Board10
0;JMP
(XGTY.Board10)
@SP
A=M-1
M=-1
(END.Board10)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Board.isHit$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Board.isHit$IF_FALSE2
0;JMP
//label IF_TRUE2
(Board.isHit$IF_TRUE2)
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Board11
D;JLT
@SP
A=M-1
D=M
@XLTY.Board11
D;JLT
(XMINUSY.Board11)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Board11
D;JLT
(XGEY.Board11)
@SP
A=M-1
D=M
M=0
@END.Board11
0;JMP
(YLT.Board11)
@SP
A=M-1
D=M
@XMINUSY.Board11
D;JLT
@XGEY.Board11
0;JMP
(XLTY.Board11)
@SP
A=M-1
M=-1
(END.Board11)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@Board.isHit$IF_TRUE3
D;JNE
//goto IF_FALSE3
@Board.isHit$IF_FALSE3
0;JMP
//label IF_TRUE3
(Board.isHit$IF_TRUE3)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//label IF_FALSE3
(Board.isHit$IF_FALSE3)
//label IF_FALSE2
(Board.isHit$IF_FALSE2)
//label IF_FALSE1
(Board.isHit$IF_FALSE1)
//label IF_FALSE0
(Board.isHit$IF_FALSE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Keyboard.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Keyboard.Sys.init$RET.0)
//function Keyboard.init 0
(Keyboard.init)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Keyboard.keyPressed 0
(Keyboard.keyPressed)
//push constant 24576
@24576
D=A
@SP
M=M+1
A=M-1
M=D
//call  Memory.peek 1
@Keyboard.Memory.peek$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.peek
0;JMP
(Keyboard.Memory.peek$RET.1)
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Keyboard.readChar 2
(Keyboard.readChar)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.printChar 1
@Keyboard.Output.printChar$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Keyboard.Output.printChar$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Keyboard.readChar$WHILE_EXP0)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Keyboard0
D;JNE
@SP
A=M-1
M=-1
(NEQ.Keyboard0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Keyboard1
D;JGT
@SP
A=M-1
D=M
@XGTY.Keyboard1
D;JGT
(XMINUSY.Keyboard1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Keyboard1
D;JGT
(XLEY.Keyboard1)
@SP
A=M-1
D=M
M=0
@END.Keyboard1
0;JMP
(YGT.Keyboard1)
@SP
A=M-1
D=M
@XMINUSY.Keyboard1
D;JGT
@XLEY.Keyboard1
0;JMP
(XGTY.Keyboard1)
@SP
A=M-1
M=-1
(END.Keyboard1)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Keyboard.readChar$WHILE_END0
D;JNE
//call  Keyboard.keyPressed 0
@Keyboard.Keyboard.keyPressed$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.Keyboard.keyPressed$RET.3)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Keyboard2
D;JGT
@SP
A=M-1
D=M
@XGTY.Keyboard2
D;JGT
(XMINUSY.Keyboard2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Keyboard2
D;JGT
(XLEY.Keyboard2)
@SP
A=M-1
D=M
M=0
@END.Keyboard2
0;JMP
(YGT.Keyboard2)
@SP
A=M-1
D=M
@XMINUSY.Keyboard2
D;JGT
@XLEY.Keyboard2
0;JMP
(XGTY.Keyboard2)
@SP
A=M-1
M=-1
(END.Keyboard2)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Keyboard.readChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Keyboard.readChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(Keyboard.readChar$IF_TRUE0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Keyboard.readChar$IF_FALSE0)
//goto WHILE_EXP0
@Keyboard.readChar$WHILE_EXP0
0;JMP
//label WHILE_END0
(Keyboard.readChar$WHILE_END0)
//call  String.backSpace 0
@Keyboard.String.backSpace$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(Keyboard.String.backSpace$RET.4)
//call  Output.printChar 1
@Keyboard.Output.printChar$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Keyboard.Output.printChar$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Output.printChar 1
@Keyboard.Output.printChar$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Keyboard.Output.printChar$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Keyboard.readLine 5
(Keyboard.readLine)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 80
@80
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.new 1
@Keyboard.String.new$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(Keyboard.String.new$RET.7)
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Output.printString 1
@Keyboard.Output.printString$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Keyboard.Output.printString$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  String.newLine 0
@Keyboard.String.newLine$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(Keyboard.String.newLine$RET.9)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  String.backSpace 0
@Keyboard.String.backSpace$RET.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(Keyboard.String.backSpace$RET.10)
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Keyboard.readLine$WHILE_EXP0)
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Keyboard.readLine$WHILE_END0
D;JNE
//call  Keyboard.readChar 0
@Keyboard.Keyboard.readChar$RET.11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readChar
0;JMP
(Keyboard.Keyboard.readChar$RET.11)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Keyboard3
D;JNE
@SP
A=M-1
M=-1
(NEQ.Keyboard3)
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Keyboard.readLine$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Keyboard.readLine$IF_FALSE0
0;JMP
//label IF_TRUE0
(Keyboard.readLine$IF_TRUE0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Keyboard4
D;JNE
@SP
A=M-1
M=-1
(NEQ.Keyboard4)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Keyboard.readLine$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Keyboard.readLine$IF_FALSE1
0;JMP
//label IF_TRUE1
(Keyboard.readLine$IF_TRUE1)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.eraseLastChar 1
@Keyboard.String.eraseLastChar$RET.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.eraseLastChar
0;JMP
(Keyboard.String.eraseLastChar$RET.12)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END1
@Keyboard.readLine$IF_END1
0;JMP
//label IF_FALSE1
(Keyboard.readLine$IF_FALSE1)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@Keyboard.String.appendChar$RET.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Keyboard.String.appendChar$RET.13)
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END1
(Keyboard.readLine$IF_END1)
//label IF_FALSE0
(Keyboard.readLine$IF_FALSE0)
//goto WHILE_EXP0
@Keyboard.readLine$WHILE_EXP0
0;JMP
//label WHILE_END0
(Keyboard.readLine$WHILE_END0)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Keyboard.readInt 2
(Keyboard.readInt)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Keyboard.readLine 1
@Keyboard.Keyboard.readLine$RET.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readLine
0;JMP
(Keyboard.Keyboard.readLine$RET.14)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.intValue 1
@Keyboard.String.intValue$RET.15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.intValue
0;JMP
(Keyboard.String.intValue$RET.15)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.dispose 1
@Keyboard.String.dispose$RET.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.dispose
0;JMP
(Keyboard.String.dispose$RET.16)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Main.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Main.Sys.init$RET.0)
//function Main.main 1
(Main.main)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  PongGame.newInstance 0
@Main.PongGame.newInstance$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.newInstance
0;JMP
(Main.PongGame.newInstance$RET.1)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  PongGame.getInstance 0
@Main.PongGame.getInstance$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.getInstance
0;JMP
(Main.PongGame.getInstance$RET.2)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  PongGame.run 1
@Main.PongGame.run$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.run
0;JMP
(Main.PongGame.run$RET.3)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  PongGame.dispose 1
@Main.PongGame.dispose$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.dispose
0;JMP
(Main.PongGame.dispose$RET.4)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Math.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Math.Sys.init$RET.0)
//function Math.init 1
(Math.init)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@Math.Array.new$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Math.Array.new$RET.1)
//pop static 1
@SP
M=M-1
A=M
D=M
@Math.1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@Math.Array.new$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Math.Array.new$RET.2)
//pop static 0
@SP
M=M-1
A=M
D=M
@Math.0
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Math.init$WHILE_EXP0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math0
D;JLT
@SP
A=M-1
D=M
@XLTY.Math0
D;JLT
(XMINUSY.Math0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math0
D;JLT
(XGEY.Math0)
@SP
A=M-1
D=M
M=0
@END.Math0
0;JMP
(YLT.Math0)
@SP
A=M-1
D=M
@XMINUSY.Math0
D;JLT
@XGEY.Math0
0;JMP
(XLTY.Math0)
@SP
A=M-1
M=-1
(END.Math0)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Math.init$WHILE_END0
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Math.init$WHILE_EXP0
0;JMP
//label WHILE_END0
(Math.init$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Math.abs 0
(Math.abs)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math1
D;JLT
@SP
A=M-1
D=M
@XLTY.Math1
D;JLT
(XMINUSY.Math1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math1
D;JLT
(XGEY.Math1)
@SP
A=M-1
D=M
M=0
@END.Math1
0;JMP
(YLT.Math1)
@SP
A=M-1
D=M
@XMINUSY.Math1
D;JLT
@XGEY.Math1
0;JMP
(XLTY.Math1)
@SP
A=M-1
M=-1
(END.Math1)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Math.abs$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.abs$IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.abs$IF_TRUE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Math.abs$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Math.multiply 5
(Math.multiply)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math2
D;JLT
@SP
A=M-1
D=M
@XLTY.Math2
D;JLT
(XMINUSY.Math2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math2
D;JLT
(XGEY.Math2)
@SP
A=M-1
D=M
M=0
@END.Math2
0;JMP
(YLT.Math2)
@SP
A=M-1
D=M
@XMINUSY.Math2
D;JLT
@XGEY.Math2
0;JMP
(XLTY.Math2)
@SP
A=M-1
M=-1
(END.Math2)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math3
D;JGT
@SP
A=M-1
D=M
@XGTY.Math3
D;JGT
(XMINUSY.Math3)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math3
D;JGT
(XLEY.Math3)
@SP
A=M-1
D=M
M=0
@END.Math3
0;JMP
(YGT.Math3)
@SP
A=M-1
D=M
@XMINUSY.Math3
D;JGT
@XLEY.Math3
0;JMP
(XGTY.Math3)
@SP
A=M-1
M=-1
(END.Math3)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math4
D;JGT
@SP
A=M-1
D=M
@XGTY.Math4
D;JGT
(XMINUSY.Math4)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math4
D;JGT
(XLEY.Math4)
@SP
A=M-1
D=M
M=0
@END.Math4
0;JMP
(YGT.Math4)
@SP
A=M-1
D=M
@XMINUSY.Math4
D;JGT
@XLEY.Math4
0;JMP
(XGTY.Math4)
@SP
A=M-1
M=-1
(END.Math4)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math5
D;JLT
@SP
A=M-1
D=M
@XLTY.Math5
D;JLT
(XMINUSY.Math5)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math5
D;JLT
(XGEY.Math5)
@SP
A=M-1
D=M
M=0
@END.Math5
0;JMP
(YLT.Math5)
@SP
A=M-1
D=M
@XMINUSY.Math5
D;JLT
@XGEY.Math5
0;JMP
(XLTY.Math5)
@SP
A=M-1
M=-1
(END.Math5)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.abs 1
@Math.Math.abs$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.Math.abs$RET.3)
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.abs 1
@Math.Math.abs$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.Math.abs$RET.4)
//pop argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math6
D;JLT
@SP
A=M-1
D=M
@XLTY.Math6
D;JLT
(XMINUSY.Math6)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math6
D;JLT
(XGEY.Math6)
@SP
A=M-1
D=M
M=0
@END.Math6
0;JMP
(YLT.Math6)
@SP
A=M-1
D=M
@XMINUSY.Math6
D;JLT
@XGEY.Math6
0;JMP
(XLTY.Math6)
@SP
A=M-1
M=-1
(END.Math6)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Math.multiply$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.multiply$IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.multiply$IF_TRUE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Math.multiply$IF_FALSE0)
//label WHILE_EXP0
(Math.multiply$WHILE_EXP0)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math7
D;JLT
@SP
A=M-1
D=M
@XLTY.Math7
D;JLT
(XMINUSY.Math7)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math7
D;JLT
(XGEY.Math7)
@SP
A=M-1
D=M
M=0
@END.Math7
0;JMP
(YLT.Math7)
@SP
A=M-1
D=M
@XMINUSY.Math7
D;JLT
@XGEY.Math7
0;JMP
(XLTY.Math7)
@SP
A=M-1
M=-1
(END.Math7)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Math.multiply$WHILE_END0
D;JNE
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math8
D;JGT
@SP
A=M-1
D=M
@XGTY.Math8
D;JGT
(XMINUSY.Math8)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math8
D;JGT
(XLEY.Math8)
@SP
A=M-1
D=M
M=0
@END.Math8
0;JMP
(YGT.Math8)
@SP
A=M-1
D=M
@XMINUSY.Math8
D;JGT
@XLEY.Math8
0;JMP
(XGTY.Math8)
@SP
A=M-1
M=-1
(END.Math8)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Math.multiply$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Math.multiply$IF_FALSE1
0;JMP
//label IF_TRUE1
(Math.multiply$IF_TRUE1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(Math.multiply$IF_FALSE1)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Math.multiply$WHILE_EXP0
0;JMP
//label WHILE_END0
(Math.multiply$WHILE_END0)
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Math.multiply$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Math.multiply$IF_FALSE2
0;JMP
//label IF_TRUE2
(Math.multiply$IF_TRUE2)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE2
(Math.multiply$IF_FALSE2)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Math.divide 4
(Math.divide)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Math9
D;JNE
@SP
A=M-1
M=-1
(NEQ.Math9)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Math.divide$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.divide$IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.divide$IF_TRUE0)
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Math.Sys.error$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Math.Sys.error$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Math.divide$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math10
D;JLT
@SP
A=M-1
D=M
@XLTY.Math10
D;JLT
(XMINUSY.Math10)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math10
D;JLT
(XGEY.Math10)
@SP
A=M-1
D=M
M=0
@END.Math10
0;JMP
(YLT.Math10)
@SP
A=M-1
D=M
@XMINUSY.Math10
D;JLT
@XGEY.Math10
0;JMP
(XLTY.Math10)
@SP
A=M-1
M=-1
(END.Math10)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math11
D;JGT
@SP
A=M-1
D=M
@XGTY.Math11
D;JGT
(XMINUSY.Math11)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math11
D;JGT
(XLEY.Math11)
@SP
A=M-1
D=M
M=0
@END.Math11
0;JMP
(YGT.Math11)
@SP
A=M-1
D=M
@XMINUSY.Math11
D;JGT
@XLEY.Math11
0;JMP
(XGTY.Math11)
@SP
A=M-1
M=-1
(END.Math11)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math12
D;JGT
@SP
A=M-1
D=M
@XGTY.Math12
D;JGT
(XMINUSY.Math12)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math12
D;JGT
(XLEY.Math12)
@SP
A=M-1
D=M
M=0
@END.Math12
0;JMP
(YGT.Math12)
@SP
A=M-1
D=M
@XMINUSY.Math12
D;JGT
@XLEY.Math12
0;JMP
(XGTY.Math12)
@SP
A=M-1
M=-1
(END.Math12)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math13
D;JLT
@SP
A=M-1
D=M
@XLTY.Math13
D;JLT
(XMINUSY.Math13)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math13
D;JLT
(XGEY.Math13)
@SP
A=M-1
D=M
M=0
@END.Math13
0;JMP
(YLT.Math13)
@SP
A=M-1
D=M
@XMINUSY.Math13
D;JLT
@XGEY.Math13
0;JMP
(XLTY.Math13)
@SP
A=M-1
M=-1
(END.Math13)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.abs 1
@Math.Math.abs$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.Math.abs$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.abs 1
@Math.Math.abs$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.Math.abs$RET.7)
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Math.divide$WHILE_EXP0)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Math.divide$WHILE_END0
D;JNE
//push constant 32767
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math14
D;JLT
@SP
A=M-1
D=M
@XLTY.Math14
D;JLT
(XMINUSY.Math14)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math14
D;JLT
(XGEY.Math14)
@SP
A=M-1
D=M
M=0
@END.Math14
0;JMP
(YLT.Math14)
@SP
A=M-1
D=M
@XMINUSY.Math14
D;JLT
@XGEY.Math14
0;JMP
(XLTY.Math14)
@SP
A=M-1
M=-1
(END.Math14)
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Math.divide$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Math.divide$IF_FALSE1
0;JMP
//label IF_TRUE1
(Math.divide$IF_TRUE1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math15
D;JGT
@SP
A=M-1
D=M
@XGTY.Math15
D;JGT
(XMINUSY.Math15)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math15
D;JGT
(XLEY.Math15)
@SP
A=M-1
D=M
M=0
@END.Math15
0;JMP
(YGT.Math15)
@SP
A=M-1
D=M
@XMINUSY.Math15
D;JGT
@XLEY.Math15
0;JMP
(XGTY.Math15)
@SP
A=M-1
M=-1
(END.Math15)
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Math.divide$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Math.divide$IF_FALSE2
0;JMP
//label IF_TRUE2
(Math.divide$IF_TRUE2)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE2
(Math.divide$IF_FALSE2)
//label IF_FALSE1
(Math.divide$IF_FALSE1)
//goto WHILE_EXP0
@Math.divide$WHILE_EXP0
0;JMP
//label WHILE_END0
(Math.divide$WHILE_END0)
//label WHILE_EXP1
(Math.divide$WHILE_EXP1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math16
D;JGT
@SP
A=M-1
D=M
@XGTY.Math16
D;JGT
(XMINUSY.Math16)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math16
D;JGT
(XLEY.Math16)
@SP
A=M-1
D=M
M=0
@END.Math16
0;JMP
(YGT.Math16)
@SP
A=M-1
D=M
@XMINUSY.Math16
D;JGT
@XLEY.Math16
0;JMP
(XGTY.Math16)
@SP
A=M-1
M=-1
(END.Math16)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M

@Math.divide$WHILE_END1
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math17
D;JGT
@SP
A=M-1
D=M
@XGTY.Math17
D;JGT
(XMINUSY.Math17)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math17
D;JGT
(XLEY.Math17)
@SP
A=M-1
D=M
M=0
@END.Math17
0;JMP
(YGT.Math17)
@SP
A=M-1
D=M
@XMINUSY.Math17
D;JGT
@XLEY.Math17
0;JMP
(XGTY.Math17)
@SP
A=M-1
M=-1
(END.Math17)
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@Math.divide$IF_TRUE3
D;JNE
//goto IF_FALSE3
@Math.divide$IF_FALSE3
0;JMP
//label IF_TRUE3
(Math.divide$IF_TRUE3)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE3
(Math.divide$IF_FALSE3)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP1
@Math.divide$WHILE_EXP1
0;JMP
//label WHILE_END1
(Math.divide$WHILE_END1)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M

@Math.divide$IF_TRUE4
D;JNE
//goto IF_FALSE4
@Math.divide$IF_FALSE4
0;JMP
//label IF_TRUE4
(Math.divide$IF_TRUE4)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE4
(Math.divide$IF_FALSE4)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Math.sqrt 4
(Math.sqrt)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math18
D;JLT
@SP
A=M-1
D=M
@XLTY.Math18
D;JLT
(XMINUSY.Math18)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math18
D;JLT
(XGEY.Math18)
@SP
A=M-1
D=M
M=0
@END.Math18
0;JMP
(YLT.Math18)
@SP
A=M-1
D=M
@XMINUSY.Math18
D;JLT
@XGEY.Math18
0;JMP
(XLTY.Math18)
@SP
A=M-1
M=-1
(END.Math18)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Math.sqrt$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.sqrt$IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.sqrt$IF_TRUE0)
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Math.Sys.error$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Math.Sys.error$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Math.sqrt$IF_FALSE0)
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Math.sqrt$WHILE_EXP0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math19
D;JGT
@SP
A=M-1
D=M
@XGTY.Math19
D;JGT
(XMINUSY.Math19)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math19
D;JGT
(XLEY.Math19)
@SP
A=M-1
D=M
M=0
@END.Math19
0;JMP
(YGT.Math19)
@SP
A=M-1
D=M
@XMINUSY.Math19
D;JGT
@XLEY.Math19
0;JMP
(XGTY.Math19)
@SP
A=M-1
M=-1
(END.Math19)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Math.sqrt$WHILE_END0
D;JNE
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Math.Math.multiply$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.Math.multiply$RET.9)
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math20
D;JGT
@SP
A=M-1
D=M
@XGTY.Math20
D;JGT
(XMINUSY.Math20)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math20
D;JGT
(XLEY.Math20)
@SP
A=M-1
D=M
M=0
@END.Math20
0;JMP
(YGT.Math20)
@SP
A=M-1
D=M
@XMINUSY.Math20
D;JGT
@XLEY.Math20
0;JMP
(XGTY.Math20)
@SP
A=M-1
M=-1
(END.Math20)
//not
@SP
A=M-1
M=!M
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math21
D;JLT
@SP
A=M-1
D=M
@XLTY.Math21
D;JLT
(XMINUSY.Math21)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math21
D;JLT
(XGEY.Math21)
@SP
A=M-1
D=M
M=0
@END.Math21
0;JMP
(YLT.Math21)
@SP
A=M-1
D=M
@XMINUSY.Math21
D;JLT
@XGEY.Math21
0;JMP
(XLTY.Math21)
@SP
A=M-1
M=-1
(END.Math21)
//not
@SP
A=M-1
M=!M
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Math.sqrt$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Math.sqrt$IF_FALSE1
0;JMP
//label IF_TRUE1
(Math.sqrt$IF_TRUE1)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(Math.sqrt$IF_FALSE1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Math.sqrt$WHILE_EXP0
0;JMP
//label WHILE_END0
(Math.sqrt$WHILE_END0)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Math.max 0
(Math.max)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Math22
D;JGT
@SP
A=M-1
D=M
@XGTY.Math22
D;JGT
(XMINUSY.Math22)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Math22
D;JGT
(XLEY.Math22)
@SP
A=M-1
D=M
M=0
@END.Math22
0;JMP
(YGT.Math22)
@SP
A=M-1
D=M
@XMINUSY.Math22
D;JGT
@XLEY.Math22
0;JMP
(XGTY.Math22)
@SP
A=M-1
M=-1
(END.Math22)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Math.max$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.max$IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.max$IF_TRUE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Math.max$IF_FALSE0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Math.min 0
(Math.min)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Math23
D;JLT
@SP
A=M-1
D=M
@XLTY.Math23
D;JLT
(XMINUSY.Math23)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Math23
D;JLT
(XGEY.Math23)
@SP
A=M-1
D=M
M=0
@END.Math23
0;JMP
(YLT.Math23)
@SP
A=M-1
D=M
@XMINUSY.Math23
D;JLT
@XGEY.Math23
0;JMP
(XLTY.Math23)
@SP
A=M-1
M=-1
(END.Math23)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Math.min$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Math.min$IF_FALSE0
0;JMP
//label IF_TRUE0
(Math.min$IF_TRUE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Math.min$IF_FALSE0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Memory.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Memory.Sys.init$RET.0)
//function Memory.init 0
(Memory.init)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 0
@SP
M=M-1
A=M
D=M
@Memory.0
M=D
//push constant 2048
@2048
D=A
@SP
M=M+1
A=M-1
M=D
//push static 0
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 14334
@14334
D=A
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 2049
@2049
D=A
@SP
M=M+1
A=M-1
M=D
//push static 0
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 2050
@2050
D=A
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Memory.peek 0
(Memory.peek)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Memory.poke 0
(Memory.poke)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Memory.alloc 1
(Memory.alloc)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Memory0
D;JLT
@SP
A=M-1
D=M
@XLTY.Memory0
D;JLT
(XMINUSY.Memory0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Memory0
D;JLT
(XGEY.Memory0)
@SP
A=M-1
D=M
M=0
@END.Memory0
0;JMP
(YLT.Memory0)
@SP
A=M-1
D=M
@XMINUSY.Memory0
D;JLT
@XGEY.Memory0
0;JMP
(XLTY.Memory0)
@SP
A=M-1
M=-1
(END.Memory0)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Memory.alloc$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Memory.alloc$IF_FALSE0
0;JMP
//label IF_TRUE0
(Memory.alloc$IF_TRUE0)
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Memory.Sys.error$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Memory.Sys.error$RET.1)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Memory.alloc$IF_FALSE0)
//push constant 2048
@2048
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Memory.alloc$WHILE_EXP0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Memory1
D;JLT
@SP
A=M-1
D=M
@XLTY.Memory1
D;JLT
(XMINUSY.Memory1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Memory1
D;JLT
(XGEY.Memory1)
@SP
A=M-1
D=M
M=0
@END.Memory1
0;JMP
(YLT.Memory1)
@SP
A=M-1
D=M
@XMINUSY.Memory1
D;JLT
@XGEY.Memory1
0;JMP
(XLTY.Memory1)
@SP
A=M-1
M=-1
(END.Memory1)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Memory.alloc$WHILE_END0
D;JNE
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Memory.alloc$WHILE_EXP0
0;JMP
//label WHILE_END0
(Memory.alloc$WHILE_END0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 16379
@16379
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Memory2
D;JGT
@SP
A=M-1
D=M
@XGTY.Memory2
D;JGT
(XMINUSY.Memory2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Memory2
D;JGT
(XLEY.Memory2)
@SP
A=M-1
D=M
M=0
@END.Memory2
0;JMP
(YGT.Memory2)
@SP
A=M-1
D=M
@XMINUSY.Memory2
D;JGT
@XLEY.Memory2
0;JMP
(XGTY.Memory2)
@SP
A=M-1
M=-1
(END.Memory2)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Memory.alloc$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Memory.alloc$IF_FALSE1
0;JMP
//label IF_TRUE1
(Memory.alloc$IF_TRUE1)
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Memory.Sys.error$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Memory.Sys.error$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(Memory.alloc$IF_FALSE1)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Memory3
D;JGT
@SP
A=M-1
D=M
@XGTY.Memory3
D;JGT
(XMINUSY.Memory3)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Memory3
D;JGT
(XLEY.Memory3)
@SP
A=M-1
D=M
M=0
@END.Memory3
0;JMP
(YGT.Memory3)
@SP
A=M-1
D=M
@XMINUSY.Memory3
D;JGT
@XLEY.Memory3
0;JMP
(XGTY.Memory3)
@SP
A=M-1
M=-1
(END.Memory3)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Memory.alloc$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Memory.alloc$IF_FALSE2
0;JMP
//label IF_TRUE2
(Memory.alloc$IF_TRUE2)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Memory4
D;JNE
@SP
A=M-1
M=-1
(NEQ.Memory4)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@Memory.alloc$IF_TRUE3
D;JNE
//goto IF_FALSE3
@Memory.alloc$IF_FALSE3
0;JMP
//label IF_TRUE3
(Memory.alloc$IF_TRUE3)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END3
@Memory.alloc$IF_END3
0;JMP
//label IF_FALSE3
(Memory.alloc$IF_FALSE3)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END3
(Memory.alloc$IF_END3)
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE2
(Memory.alloc$IF_FALSE2)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Memory.deAlloc 2
(Memory.deAlloc)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Memory5
D;JNE
@SP
A=M-1
M=-1
(NEQ.Memory5)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Memory.deAlloc$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Memory.deAlloc$IF_FALSE0
0;JMP
//label IF_TRUE0
(Memory.deAlloc$IF_TRUE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Memory.deAlloc$IF_END0
0;JMP
//label IF_FALSE0
(Memory.deAlloc$IF_FALSE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Memory6
D;JNE
@SP
A=M-1
M=-1
(NEQ.Memory6)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Memory.deAlloc$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Memory.deAlloc$IF_FALSE1
0;JMP
//label IF_TRUE1
(Memory.deAlloc$IF_TRUE1)
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END1
@Memory.deAlloc$IF_END1
0;JMP
//label IF_FALSE1
(Memory.deAlloc$IF_FALSE1)
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END1
(Memory.deAlloc$IF_END1)
//label IF_END0
(Memory.deAlloc$IF_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Output.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Output.Sys.init$RET.0)
//function Output.init 0
(Output.init)
//push constant 16384
@16384
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 4
@SP
M=M-1
A=M
D=M
@Output.4
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
M=M-1
A=M
D=M
@Output.2
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 1
@SP
M=M-1
A=M
D=M
@Output.1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 0
@SP
M=M-1
A=M
D=M
@Output.0
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.new 1
@Output.String.new$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(Output.String.new$RET.1)
//pop static 3
@SP
M=M-1
A=M
D=M
@Output.3
M=D
//call  Output.initMap 0
@Output.Output.initMap$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.initMap
0;JMP
(Output.Output.initMap$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  Output.createShiftedMap 0
@Output.Output.createShiftedMap$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.createShiftedMap
0;JMP
(Output.Output.createShiftedMap$RET.3)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.initMap 0
(Output.initMap)
//push constant 127
@127
D=A
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@Output.Array.new$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Output.Array.new$RET.4)
//pop static 5
@SP
M=M-1
A=M
D=M
@Output.5
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 33
@33
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.7)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 34
@34
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 20
@20
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.9)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 36
@36
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.10)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 37
@37
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.11)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.12)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 39
@39
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.13)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 40
@40
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.14)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 41
@41
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.15)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 42
@42
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.16)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.17
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.17)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 44
@44
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.18
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.18)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.19
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.19)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 46
@46
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.20
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.20)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 47
@47
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.21
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.21)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.22
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.22)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.23
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.23)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.24)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.25
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.25)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 52
@52
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 26
@26
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.26
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.26)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 53
@53
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.27
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.27)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.28
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.28)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.29
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.29)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.30
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.30)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 57
@57
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.31
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.31)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 58
@58
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.32
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.32)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.33
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.33)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.34
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.34)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 61
@61
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.35
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.35)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.36
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.36)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 64
@64
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.37
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.37)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.38
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.38)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 65
@65
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.39
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.39)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 66
@66
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.40
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.40)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 67
@67
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.41
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.41)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 68
@68
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.42)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 69
@69
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.43
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.43)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 70
@70
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.44
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.44)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 71
@71
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 44
@44
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.45
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.45)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 72
@72
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.46
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.46)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 73
@73
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.47
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.47)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 74
@74
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.48
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.48)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 75
@75
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.49
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.49)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 76
@76
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.50
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.50)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 77
@77
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 33
@33
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.51
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.51)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 78
@78
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.52
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.52)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 79
@79
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.53
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.53)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 80
@80
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.54
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.54)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 81
@81
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.55
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.55)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.56
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.56)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 83
@83
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.57
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.57)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 84
@84
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.58
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.58)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 85
@85
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.59
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.59)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 86
@86
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.60
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.60)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 87
@87
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.61
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.61)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 88
@88
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.62
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.62)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 89
@89
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.63
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.63)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 90
@90
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.64
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.64)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 91
@91
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.65
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.65)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 92
@92
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.66
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.66)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 93
@93
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.67
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.67)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 94
@94
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.68
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.68)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 95
@95
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.69
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.69)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 96
@96
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.70
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.70)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 97
@97
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.71
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.71)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 98
@98
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.72
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.72)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 99
@99
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.73
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.73)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 100
@100
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.74
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.74)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.75
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.75)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 102
@102
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.76
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.76)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 103
@103
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.77
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.77)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 104
@104
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.78
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.78)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 105
@105
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.79
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.79)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 106
@106
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.80
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.80)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 107
@107
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.81
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.81)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 108
@108
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.82
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.82)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 109
@109
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.83
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.83)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 110
@110
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.84
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.84)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 111
@111
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.85
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.85)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 112
@112
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.86
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.86)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 113
@113
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.87
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.87)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.88
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.88)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 115
@115
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.89
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.89)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 116
@116
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.90
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.90)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 117
@117
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.91
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.91)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 118
@118
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.92
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.92)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 119
@119
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.93
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.93)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 120
@120
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.94
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.94)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 121
@121
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.95
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.95)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 122
@122
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.96
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.96)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 123
@123
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.97
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.97)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 124
@124
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.98
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.98)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 125
@125
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.99
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.99)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 126
@126
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.create 12
@Output.Output.create$RET.100
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@12
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$RET.100)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.create 1
(Output.create)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@Output.Array.new$RET.101
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Output.Array.new$RET.101)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 5
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 4
@ARG
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 5
@ARG
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 6
@ARG
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 7
@ARG
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 8
@ARG
D=M
@8
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 9
@ARG
D=M
@9
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 10
@ARG
D=M
@10
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 11
@ARG
D=M
@11
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.createShiftedMap 4
(Output.createShiftedMap)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 127
@127
D=A
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@Output.Array.new$RET.102
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Output.Array.new$RET.102)
//pop static 6
@SP
M=M-1
A=M
D=M
@Output.6
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Output.createShiftedMap$WHILE_EXP0)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 127
@127
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Output0
D;JLT
@SP
A=M-1
D=M
@XLTY.Output0
D;JLT
(XMINUSY.Output0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Output0
D;JLT
(XGEY.Output0)
@SP
A=M-1
D=M
M=0
@END.Output0
0;JMP
(YLT.Output0)
@SP
A=M-1
D=M
@XMINUSY.Output0
D;JLT
@XGEY.Output0
0;JMP
(XLTY.Output0)
@SP
A=M-1
M=-1
(END.Output0)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Output.createShiftedMap$WHILE_END0
D;JNE
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 5
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@Output.Array.new$RET.103
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Output.Array.new$RET.103)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 6
@Output.6
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP1
(Output.createShiftedMap$WHILE_EXP1)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Output1
D;JLT
@SP
A=M-1
D=M
@XLTY.Output1
D;JLT
(XMINUSY.Output1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Output1
D;JLT
(XGEY.Output1)
@SP
A=M-1
D=M
M=0
@END.Output1
0;JMP
(YLT.Output1)
@SP
A=M-1
D=M
@XMINUSY.Output1
D;JLT
@XGEY.Output1
0;JMP
(XLTY.Output1)
@SP
A=M-1
M=-1
(END.Output1)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M

@Output.createShiftedMap$WHILE_END1
D;JNE
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 256
@256
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Output.Math.multiply$RET.104
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Output.Math.multiply$RET.104)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP1
@Output.createShiftedMap$WHILE_EXP1
0;JMP
//label WHILE_END1
(Output.createShiftedMap$WHILE_END1)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Output2
D;JNE
@SP
A=M-1
M=-1
(NEQ.Output2)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Output.createShiftedMap$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.createShiftedMap$IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.createShiftedMap$IF_TRUE0)
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Output.createShiftedMap$IF_END0
0;JMP
//label IF_FALSE0
(Output.createShiftedMap$IF_FALSE0)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END0
(Output.createShiftedMap$IF_END0)
//goto WHILE_EXP0
@Output.createShiftedMap$WHILE_EXP0
0;JMP
//label WHILE_END0
(Output.createShiftedMap$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.getMap 1
(Output.getMap)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Output3
D;JLT
@SP
A=M-1
D=M
@XLTY.Output3
D;JLT
(XMINUSY.Output3)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Output3
D;JLT
(XGEY.Output3)
@SP
A=M-1
D=M
M=0
@END.Output3
0;JMP
(YLT.Output3)
@SP
A=M-1
D=M
@XMINUSY.Output3
D;JLT
@XGEY.Output3
0;JMP
(XLTY.Output3)
@SP
A=M-1
M=-1
(END.Output3)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 126
@126
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Output4
D;JGT
@SP
A=M-1
D=M
@XGTY.Output4
D;JGT
(XMINUSY.Output4)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Output4
D;JGT
(XLEY.Output4)
@SP
A=M-1
D=M
M=0
@END.Output4
0;JMP
(YGT.Output4)
@SP
A=M-1
D=M
@XMINUSY.Output4
D;JGT
@XLEY.Output4
0;JMP
(XGTY.Output4)
@SP
A=M-1
M=-1
(END.Output4)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Output.getMap$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.getMap$IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.getMap$IF_TRUE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Output.getMap$IF_FALSE0)
//push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Output.getMap$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Output.getMap$IF_FALSE1
0;JMP
//label IF_TRUE1
(Output.getMap$IF_TRUE1)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 5
@Output.5
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END1
@Output.getMap$IF_END1
0;JMP
//label IF_FALSE1
(Output.getMap$IF_FALSE1)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 6
@Output.6
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END1
(Output.getMap$IF_END1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.drawChar 4
(Output.drawChar)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Output.getMap 1
@Output.Output.getMap$RET.105
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.getMap
0;JMP
(Output.Output.getMap$RET.105)
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Output.drawChar$WHILE_EXP0)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Output5
D;JLT
@SP
A=M-1
D=M
@XLTY.Output5
D;JLT
(XMINUSY.Output5)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Output5
D;JLT
(XGEY.Output5)
@SP
A=M-1
D=M
M=0
@END.Output5
0;JMP
(YLT.Output5)
@SP
A=M-1
D=M
@XMINUSY.Output5
D;JLT
@XGEY.Output5
0;JMP
(XLTY.Output5)
@SP
A=M-1
M=-1
(END.Output5)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Output.drawChar$WHILE_END0
D;JNE
//push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Output.drawChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.drawChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.drawChar$IF_TRUE0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 4
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 256
@256
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Output.drawChar$IF_END0
0;JMP
//label IF_FALSE0
(Output.drawChar$IF_FALSE0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 4
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END0
(Output.drawChar$IF_END0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 4
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Output.drawChar$WHILE_EXP0
0;JMP
//label WHILE_END0
(Output.drawChar$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.moveCursor 0
(Output.moveCursor)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Output6
D;JLT
@SP
A=M-1
D=M
@XLTY.Output6
D;JLT
(XMINUSY.Output6)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Output6
D;JLT
(XGEY.Output6)
@SP
A=M-1
D=M
M=0
@END.Output6
0;JMP
(YLT.Output6)
@SP
A=M-1
D=M
@XMINUSY.Output6
D;JLT
@XGEY.Output6
0;JMP
(XLTY.Output6)
@SP
A=M-1
M=-1
(END.Output6)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 22
@22
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Output7
D;JGT
@SP
A=M-1
D=M
@XGTY.Output7
D;JGT
(XMINUSY.Output7)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Output7
D;JGT
(XLEY.Output7)
@SP
A=M-1
D=M
M=0
@END.Output7
0;JMP
(YGT.Output7)
@SP
A=M-1
D=M
@XMINUSY.Output7
D;JGT
@XLEY.Output7
0;JMP
(XGTY.Output7)
@SP
A=M-1
M=-1
(END.Output7)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Output8
D;JLT
@SP
A=M-1
D=M
@XLTY.Output8
D;JLT
(XMINUSY.Output8)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Output8
D;JLT
(XGEY.Output8)
@SP
A=M-1
D=M
M=0
@END.Output8
0;JMP
(YLT.Output8)
@SP
A=M-1
D=M
@XMINUSY.Output8
D;JLT
@XGEY.Output8
0;JMP
(XLTY.Output8)
@SP
A=M-1
M=-1
(END.Output8)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Output9
D;JGT
@SP
A=M-1
D=M
@XGTY.Output9
D;JGT
(XMINUSY.Output9)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Output9
D;JGT
(XLEY.Output9)
@SP
A=M-1
D=M
M=0
@END.Output9
0;JMP
(YGT.Output9)
@SP
A=M-1
D=M
@XMINUSY.Output9
D;JGT
@XLEY.Output9
0;JMP
(XGTY.Output9)
@SP
A=M-1
M=-1
(END.Output9)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Output.moveCursor$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.moveCursor$IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.moveCursor$IF_TRUE0)
//push constant 20
@20
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Output.Sys.error$RET.106
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Output.Sys.error$RET.106)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Output.moveCursor$IF_FALSE0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Output.Math.divide$RET.107
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Output.Math.divide$RET.107)
//pop static 0
@SP
M=M-1
A=M
D=M
@Output.0
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 352
@352
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Output.Math.multiply$RET.108
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Output.Math.multiply$RET.108)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop static 1
@SP
M=M-1
A=M
D=M
@Output.1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Output.Math.multiply$RET.109
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Output.Math.multiply$RET.109)
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Output10
D;JNE
@SP
A=M-1
M=-1
(NEQ.Output10)
//pop static 2
@SP
M=M-1
A=M
D=M
@Output.2
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.drawChar 1
@Output.Output.drawChar$RET.110
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(Output.Output.drawChar$RET.110)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.printChar 0
(Output.printChar)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.newLine 0
@Output.String.newLine$RET.111
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.newLine
0;JMP
(Output.String.newLine$RET.111)
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Output11
D;JNE
@SP
A=M-1
M=-1
(NEQ.Output11)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Output.printChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.printChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.printChar$IF_TRUE0)
//call  Output.println 0
@Output.Output.println$RET.112
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Output.Output.println$RET.112)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Output.printChar$IF_END0
0;JMP
//label IF_FALSE0
(Output.printChar$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.backSpace 0
@Output.String.backSpace$RET.113
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.backSpace
0;JMP
(Output.String.backSpace$RET.113)
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Output12
D;JNE
@SP
A=M-1
M=-1
(NEQ.Output12)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Output.printChar$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Output.printChar$IF_FALSE1
0;JMP
//label IF_TRUE1
(Output.printChar$IF_TRUE1)
//call  Output.backSpace 0
@Output.Output.backSpace$RET.114
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.backSpace
0;JMP
(Output.Output.backSpace$RET.114)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END1
@Output.printChar$IF_END1
0;JMP
//label IF_FALSE1
(Output.printChar$IF_FALSE1)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Output.drawChar 1
@Output.Output.drawChar$RET.115
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(Output.Output.drawChar$RET.115)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Output.printChar$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Output.printChar$IF_FALSE2
0;JMP
//label IF_TRUE2
(Output.printChar$IF_TRUE2)
//push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop static 0
@SP
M=M-1
A=M
D=M
@Output.0
M=D
//push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop static 1
@SP
M=M-1
A=M
D=M
@Output.1
M=D
//label IF_FALSE2
(Output.printChar$IF_FALSE2)
//push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Output13
D;JNE
@SP
A=M-1
M=-1
(NEQ.Output13)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@Output.printChar$IF_TRUE3
D;JNE
//goto IF_FALSE3
@Output.printChar$IF_FALSE3
0;JMP
//label IF_TRUE3
(Output.printChar$IF_TRUE3)
//call  Output.println 0
@Output.Output.println$RET.116
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Output.Output.println$RET.116)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END3
@Output.printChar$IF_END3
0;JMP
//label IF_FALSE3
(Output.printChar$IF_FALSE3)
//push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
M=M-1
A=M
D=M
@Output.2
M=D
//label IF_END3
(Output.printChar$IF_END3)
//label IF_END1
(Output.printChar$IF_END1)
//label IF_END0
(Output.printChar$IF_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.printString 2
(Output.printString)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.length 1
@Output.String.length$RET.117
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.length
0;JMP
(Output.String.length$RET.117)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Output.printString$WHILE_EXP0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Output14
D;JLT
@SP
A=M-1
D=M
@XLTY.Output14
D;JLT
(XMINUSY.Output14)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Output14
D;JLT
(XGEY.Output14)
@SP
A=M-1
D=M
M=0
@END.Output14
0;JMP
(YLT.Output14)
@SP
A=M-1
D=M
@XMINUSY.Output14
D;JLT
@XGEY.Output14
0;JMP
(XLTY.Output14)
@SP
A=M-1
M=-1
(END.Output14)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Output.printString$WHILE_END0
D;JNE
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.charAt 2
@Output.String.charAt$RET.118
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(Output.String.charAt$RET.118)
//call  Output.printChar 1
@Output.Output.printChar$RET.119
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.Output.printChar$RET.119)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Output.printString$WHILE_EXP0
0;JMP
//label WHILE_END0
(Output.printString$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.printInt 0
(Output.printInt)
//push static 3
@Output.3
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  String.setInt 2
@Output.String.setInt$RET.120
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.setInt
0;JMP
(Output.String.setInt$RET.120)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push static 3
@Output.3
D=M
@SP
M=M+1
A=M-1
M=D
//call  Output.printString 1
@Output.Output.printString$RET.121
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.Output.printString$RET.121)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.println 0
(Output.println)
//push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 352
@352
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop static 1
@SP
M=M-1
A=M
D=M
@Output.1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 0
@SP
M=M-1
A=M
D=M
@Output.0
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
M=M-1
A=M
D=M
@Output.2
M=D
//push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 8128
@8128
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Output15
D;JNE
@SP
A=M-1
M=-1
(NEQ.Output15)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Output.println$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.println$IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.println$IF_TRUE0)
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 1
@SP
M=M-1
A=M
D=M
@Output.1
M=D
//label IF_FALSE0
(Output.println$IF_FALSE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Output.backSpace 0
(Output.backSpace)
//push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Output.backSpace$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Output.backSpace$IF_FALSE0
0;JMP
//label IF_TRUE0
(Output.backSpace$IF_TRUE0)
//push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Output16
D;JGT
@SP
A=M-1
D=M
@XGTY.Output16
D;JGT
(XMINUSY.Output16)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Output16
D;JGT
(XLEY.Output16)
@SP
A=M-1
D=M
M=0
@END.Output16
0;JMP
(YGT.Output16)
@SP
A=M-1
D=M
@XMINUSY.Output16
D;JGT
@XLEY.Output16
0;JMP
(XGTY.Output16)
@SP
A=M-1
M=-1
(END.Output16)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Output.backSpace$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Output.backSpace$IF_FALSE1
0;JMP
//label IF_TRUE1
(Output.backSpace$IF_TRUE1)
//push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop static 0
@SP
M=M-1
A=M
D=M
@Output.0
M=D
//push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop static 1
@SP
M=M-1
A=M
D=M
@Output.1
M=D
//goto IF_END1
@Output.backSpace$IF_END1
0;JMP
//label IF_FALSE1
(Output.backSpace$IF_FALSE1)
//push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 0
@SP
M=M-1
A=M
D=M
@Output.0
M=D
//push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Output17
D;JNE
@SP
A=M-1
M=-1
(NEQ.Output17)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Output.backSpace$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Output.backSpace$IF_FALSE2
0;JMP
//label IF_TRUE2
(Output.backSpace$IF_TRUE2)
//push constant 8128
@8128
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 1
@SP
M=M-1
A=M
D=M
@Output.1
M=D
//label IF_FALSE2
(Output.backSpace$IF_FALSE2)
//push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 321
@321
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop static 1
@SP
M=M-1
A=M
D=M
@Output.1
M=D
//label IF_END1
(Output.backSpace$IF_END1)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 2
@SP
M=M-1
A=M
D=M
@Output.2
M=D
//goto IF_END0
@Output.backSpace$IF_END0
0;JMP
//label IF_FALSE0
(Output.backSpace$IF_FALSE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
M=M-1
A=M
D=M
@Output.2
M=D
//label IF_END0
(Output.backSpace$IF_END0)
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.drawChar 1
@Output.Output.drawChar$RET.122
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.drawChar
0;JMP
(Output.Output.drawChar$RET.122)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@PongGame.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(PongGame.Sys.init$RET.0)
//function PongGame.new 0
(PongGame.new)
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//call  Memory.alloc 1
@PongGame.Memory.alloc$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(PongGame.Memory.alloc$RET.1)
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//call  Screen.clearScreen 0
@PongGame.Screen.clearScreen$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.clearScreen
0;JMP
(PongGame.Screen.clearScreen$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 230
@230
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 229
@229
D=A
@SP
M=M+1
A=M-1
M=D
//push this 6
@THIS
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//call  Bat.new 4
@PongGame.Bat.new$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.new
0;JMP
(PongGame.Bat.new$RET.3)
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 253
@253
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 222
@222
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 229
@229
D=A
@SP
M=M+1
A=M-1
M=D
//call  Ball.new 6
@PongGame.Ball.new$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@6
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.new
0;JMP
(PongGame.Ball.new$RET.4)
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 400
@400
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Ball.setDestination 3
@PongGame.Ball.setDestination$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@3
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.setDestination
0;JMP
(PongGame.Ball.setDestination$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 238
@238
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 240
@240
D=A
@SP
M=M+1
A=M-1
M=D
//call  Screen.drawRectangle 4
@PongGame.Screen.drawRectangle$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(PongGame.Screen.drawRectangle$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 22
@22
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.moveCursor 2
@PongGame.Output.moveCursor$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame.Output.moveCursor$RET.7)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.new 1
@PongGame.String.new$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(PongGame.String.new$RET.8)
//push constant 83
@83
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.9)
//push constant 99
@99
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.10)
//push constant 111
@111
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.11)
//push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.12)
//push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.13)
//push constant 58
@58
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.14)
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.15)
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.16)
//call  Output.printString 1
@PongGame.Output.printString$RET.17
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(PongGame.Output.printString$RET.17)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 5
@THIS
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function PongGame.dispose 0
(PongGame.dispose)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.dispose 1
@PongGame.Bat.dispose$RET.18
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.dispose
0;JMP
(PongGame.Bat.dispose$RET.18)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Memory.deAlloc 1
@PongGame.Memory.deAlloc$RET.19
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(PongGame.Memory.deAlloc$RET.19)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function PongGame.newInstance 0
(PongGame.newInstance)
//call  PongGame.new 0
@PongGame.PongGame.new$RET.20
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.new
0;JMP
(PongGame.PongGame.new$RET.20)
//pop static 0
@SP
M=M-1
A=M
D=M
@PongGame.0
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function PongGame.checkClearBoard 0
(PongGame.checkClearBoard)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function PongGame.checkBoard 2
(PongGame.checkBoard)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//call  PongGame.checkClearBoard 1
@PongGame.PongGame.checkClearBoard$RET.21
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.checkClearBoard
0;JMP
(PongGame.PongGame.checkClearBoard$RET.21)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function PongGame.getInstance 0
(PongGame.getInstance)
//push static 0
@PongGame.0
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function PongGame.run 1
(PongGame.run)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//label WHILE_EXP0
(PongGame.run$WHILE_EXP0)
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@PongGame.run$WHILE_END0
D;JNE
//label WHILE_EXP1
(PongGame.run$WHILE_EXP1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.PongGame0
D;JNE
@SP
A=M-1
M=-1
(NEQ.PongGame0)
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M

@PongGame.run$WHILE_END1
D;JNE
//call  Keyboard.keyPressed 0
@PongGame.Keyboard.keyPressed$RET.22
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(PongGame.Keyboard.keyPressed$RET.22)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.move 1
@PongGame.Bat.move$RET.23
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.move
0;JMP
(PongGame.Bat.move$RET.23)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  PongGame.moveBall 1
@PongGame.PongGame.moveBall$RET.24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.moveBall
0;JMP
(PongGame.PongGame.moveBall$RET.24)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP1
@PongGame.run$WHILE_EXP1
0;JMP
//label WHILE_END1
(PongGame.run$WHILE_END1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 130
@130
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.PongGame1
D;JNE
@SP
A=M-1
M=-1
(NEQ.PongGame1)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@PongGame.run$IF_TRUE0
D;JNE
//goto IF_FALSE0
@PongGame.run$IF_FALSE0
0;JMP
//label IF_TRUE0
(PongGame.run$IF_TRUE0)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//call  Bat.setDirection 2
@PongGame.Bat.setDirection$RET.25
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setDirection
0;JMP
(PongGame.Bat.setDirection$RET.25)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@PongGame.run$IF_END0
0;JMP
//label IF_FALSE0
(PongGame.run$IF_FALSE0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 132
@132
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.PongGame2
D;JNE
@SP
A=M-1
M=-1
(NEQ.PongGame2)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@PongGame.run$IF_TRUE1
D;JNE
//goto IF_FALSE1
@PongGame.run$IF_FALSE1
0;JMP
//label IF_TRUE1
(PongGame.run$IF_TRUE1)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//call  Bat.setDirection 2
@PongGame.Bat.setDirection$RET.26
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setDirection
0;JMP
(PongGame.Bat.setDirection$RET.26)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END1
@PongGame.run$IF_END1
0;JMP
//label IF_FALSE1
(PongGame.run$IF_FALSE1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 140
@140
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.PongGame3
D;JNE
@SP
A=M-1
M=-1
(NEQ.PongGame3)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@PongGame.run$IF_TRUE2
D;JNE
//goto IF_FALSE2
@PongGame.run$IF_FALSE2
0;JMP
//label IF_TRUE2
(PongGame.run$IF_TRUE2)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE2
(PongGame.run$IF_FALSE2)
//label IF_END1
(PongGame.run$IF_END1)
//label IF_END0
(PongGame.run$IF_END0)
//label WHILE_EXP2
(PongGame.run$WHILE_EXP2)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.PongGame4
D;JNE
@SP
A=M-1
M=-1
(NEQ.PongGame4)
//not
@SP
A=M-1
M=!M
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END2
@SP
M=M-1
A=M
D=M

@PongGame.run$WHILE_END2
D;JNE
//call  Keyboard.keyPressed 0
@PongGame.Keyboard.keyPressed$RET.27
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(PongGame.Keyboard.keyPressed$RET.27)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.move 1
@PongGame.Bat.move$RET.28
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.move
0;JMP
(PongGame.Bat.move$RET.28)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  PongGame.moveBall 1
@PongGame.PongGame.moveBall$RET.29
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.moveBall
0;JMP
(PongGame.PongGame.moveBall$RET.29)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP2
@PongGame.run$WHILE_EXP2
0;JMP
//label WHILE_END2
(PongGame.run$WHILE_END2)
//goto WHILE_EXP0
@PongGame.run$WHILE_EXP0
0;JMP
//label WHILE_END0
(PongGame.run$WHILE_END0)
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@PongGame.run$IF_TRUE3
D;JNE
//goto IF_FALSE3
@PongGame.run$IF_FALSE3
0;JMP
//label IF_TRUE3
(PongGame.run$IF_TRUE3)
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.moveCursor 2
@PongGame.Output.moveCursor$RET.30
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame.Output.moveCursor$RET.30)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.new 1
@PongGame.String.new$RET.31
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(PongGame.String.new$RET.31)
//push constant 71
@71
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.32
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.32)
//push constant 97
@97
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.33
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.33)
//push constant 109
@109
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.34
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.34)
//push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.35
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.35)
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.36
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.36)
//push constant 79
@79
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.37
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.37)
//push constant 118
@118
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.38
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.38)
//push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.39
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.39)
//push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@PongGame.String.appendChar$RET.40
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$RET.40)
//call  Output.printString 1
@PongGame.Output.printString$RET.41
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(PongGame.Output.printString$RET.41)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE3
(PongGame.run$IF_FALSE3)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function PongGame.moveBall 5
(PongGame.moveBall)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.move 1
@PongGame.Ball.move$RET.42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.move
0;JMP
(PongGame.Ball.move$RET.42)
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.PongGame5
D;JGT
@SP
A=M-1
D=M
@XGTY.PongGame5
D;JGT
(XMINUSY.PongGame5)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.PongGame5
D;JGT
(XLEY.PongGame5)
@SP
A=M-1
D=M
M=0
@END.PongGame5
0;JMP
(YGT.PongGame5)
@SP
A=M-1
D=M
@XMINUSY.PongGame5
D;JGT
@XLEY.PongGame5
0;JMP
(XGTY.PongGame5)
@SP
A=M-1
M=-1
(END.PongGame5)
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 5
@THIS
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.PongGame6
D;JNE
@SP
A=M-1
M=-1
(NEQ.PongGame6)
//not
@SP
A=M-1
M=!M
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@PongGame.moveBall$IF_TRUE0
D;JNE
//goto IF_FALSE0
@PongGame.moveBall$IF_FALSE0
0;JMP
//label IF_TRUE0
(PongGame.moveBall$IF_TRUE0)
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 5
@THIS
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.getLeft 1
@PongGame.Bat.getLeft$RET.43
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.getLeft
0;JMP
(PongGame.Bat.getLeft$RET.43)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.getRight 1
@PongGame.Bat.getRight$RET.44
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.getRight
0;JMP
(PongGame.Bat.getRight$RET.44)
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.getLeft 1
@PongGame.Ball.getLeft$RET.45
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.getLeft
0;JMP
(PongGame.Ball.getLeft$RET.45)
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.getRight 1
@PongGame.Ball.getRight$RET.46
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.getRight
0;JMP
(PongGame.Ball.getRight$RET.46)
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.PongGame7
D;JNE
@SP
A=M-1
M=-1
(NEQ.PongGame7)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@PongGame.moveBall$IF_TRUE1
D;JNE
//goto IF_FALSE1
@PongGame.moveBall$IF_FALSE1
0;JMP
//label IF_TRUE1
(PongGame.moveBall$IF_TRUE1)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.PongGame8
D;JGT
@SP
A=M-1
D=M
@XGTY.PongGame8
D;JGT
(XMINUSY.PongGame8)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.PongGame8
D;JGT
(XLEY.PongGame8)
@SP
A=M-1
D=M
M=0
@END.PongGame8
0;JMP
(YGT.PongGame8)
@SP
A=M-1
D=M
@XMINUSY.PongGame8
D;JGT
@XLEY.PongGame8
0;JMP
(XGTY.PongGame8)
@SP
A=M-1
M=-1
(END.PongGame8)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.PongGame9
D;JLT
@SP
A=M-1
D=M
@XLTY.PongGame9
D;JLT
(XMINUSY.PongGame9)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.PongGame9
D;JLT
(XGEY.PongGame9)
@SP
A=M-1
D=M
M=0
@END.PongGame9
0;JMP
(YLT.PongGame9)
@SP
A=M-1
D=M
@XMINUSY.PongGame9
D;JLT
@XGEY.PongGame9
0;JMP
(XLTY.PongGame9)
@SP
A=M-1
M=-1
(END.PongGame9)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 3
@THIS
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@PongGame.moveBall$IF_TRUE2
D;JNE
//goto IF_FALSE2
@PongGame.moveBall$IF_FALSE2
0;JMP
//label IF_TRUE2
(PongGame.moveBall$IF_TRUE2)
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//lt
@SP
M=M-1
A=M
D=M
@YLT.PongGame10
D;JLT
@SP
A=M-1
D=M
@XLTY.PongGame10
D;JLT
(XMINUSY.PongGame10)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.PongGame10
D;JLT
(XGEY.PongGame10)
@SP
A=M-1
D=M
M=0
@END.PongGame10
0;JMP
(YLT.PongGame10)
@SP
A=M-1
D=M
@XMINUSY.PongGame10
D;JLT
@XGEY.PongGame10
0;JMP
(XLTY.PongGame10)
@SP
A=M-1
M=-1
(END.PongGame10)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@PongGame.moveBall$IF_TRUE3
D;JNE
//goto IF_FALSE3
@PongGame.moveBall$IF_FALSE3
0;JMP
//label IF_TRUE3
(PongGame.moveBall$IF_TRUE3)
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END3
@PongGame.moveBall$IF_END3
0;JMP
//label IF_FALSE3
(PongGame.moveBall$IF_FALSE3)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//gt
@SP
M=M-1
A=M
D=M
@YGT.PongGame11
D;JGT
@SP
A=M-1
D=M
@XGTY.PongGame11
D;JGT
(XMINUSY.PongGame11)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.PongGame11
D;JGT
(XLEY.PongGame11)
@SP
A=M-1
D=M
M=0
@END.PongGame11
0;JMP
(YGT.PongGame11)
@SP
A=M-1
D=M
@XMINUSY.PongGame11
D;JGT
@XLEY.PongGame11
0;JMP
(XGTY.PongGame11)
@SP
A=M-1
M=-1
(END.PongGame11)
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M

@PongGame.moveBall$IF_TRUE4
D;JNE
//goto IF_FALSE4
@PongGame.moveBall$IF_FALSE4
0;JMP
//label IF_TRUE4
(PongGame.moveBall$IF_TRUE4)
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE4
(PongGame.moveBall$IF_FALSE4)
//label IF_END3
(PongGame.moveBall$IF_END3)
//push this 6
@THIS
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 6
@THIS
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Bat.setWidth 2
@PongGame.Bat.setWidth$RET.47
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setWidth
0;JMP
(PongGame.Bat.setWidth$RET.47)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 4
@THIS
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 22
@22
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//call  Output.moveCursor 2
@PongGame.Output.moveCursor$RET.48
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame.Output.moveCursor$RET.48)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 4
@THIS
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Output.printInt 1
@PongGame.Output.printInt$RET.49
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(PongGame.Output.printInt$RET.49)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE2
(PongGame.moveBall$IF_FALSE2)
//label IF_FALSE1
(PongGame.moveBall$IF_FALSE1)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Ball.bounce 2
@PongGame.Ball.bounce$RET.50
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.bounce
0;JMP
(PongGame.Ball.bounce$RET.50)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(PongGame.moveBall$IF_FALSE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Screen.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Screen.Sys.init$RET.0)
//function Screen.init 1
(Screen.init)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 16384
@16384
D=A
@SP
M=M+1
A=M-1
M=D
//pop static 1
@SP
M=M-1
A=M
D=M
@Screen.1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop static 2
@SP
M=M-1
A=M
D=M
@Screen.2
M=D
//push constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@Screen.Array.new$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Screen.Array.new$RET.1)
//pop static 0
@SP
M=M-1
A=M
D=M
@Screen.0
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Screen.init$WHILE_EXP0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen0
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen0
D;JLT
(XMINUSY.Screen0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen0
D;JLT
(XGEY.Screen0)
@SP
A=M-1
D=M
M=0
@END.Screen0
0;JMP
(YLT.Screen0)
@SP
A=M-1
D=M
@XMINUSY.Screen0
D;JLT
@XGEY.Screen0
0;JMP
(XLTY.Screen0)
@SP
A=M-1
M=-1
(END.Screen0)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Screen.init$WHILE_END0
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Screen.init$WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.init$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.clearScreen 1
(Screen.clearScreen)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//label WHILE_EXP0
(Screen.clearScreen$WHILE_EXP0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 8192
@8192
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen1
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen1
D;JLT
(XMINUSY.Screen1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen1
D;JLT
(XGEY.Screen1)
@SP
A=M-1
D=M
M=0
@END.Screen1
0;JMP
(YLT.Screen1)
@SP
A=M-1
D=M
@XMINUSY.Screen1
D;JLT
@XGEY.Screen1
0;JMP
(XLTY.Screen1)
@SP
A=M-1
M=-1
(END.Screen1)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Screen.clearScreen$WHILE_END0
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Screen.clearScreen$WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.clearScreen$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.updateLocation 0
(Screen.updateLocation)
//push static 2
@Screen.2
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Screen.updateLocation$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.updateLocation$IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.updateLocation$IF_TRUE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Screen.updateLocation$IF_END0
0;JMP
//label IF_FALSE0
(Screen.updateLocation$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END0
(Screen.updateLocation$IF_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.setColor 0
(Screen.setColor)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop static 2
@SP
M=M-1
A=M
D=M
@Screen.2
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.drawPixel 3
(Screen.drawPixel)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen2
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen2
D;JLT
(XMINUSY.Screen2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen2
D;JLT
(XGEY.Screen2)
@SP
A=M-1
D=M
M=0
@END.Screen2
0;JMP
(YLT.Screen2)
@SP
A=M-1
D=M
@XMINUSY.Screen2
D;JLT
@XGEY.Screen2
0;JMP
(XLTY.Screen2)
@SP
A=M-1
M=-1
(END.Screen2)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen3
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen3
D;JGT
(XMINUSY.Screen3)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen3
D;JGT
(XLEY.Screen3)
@SP
A=M-1
D=M
M=0
@END.Screen3
0;JMP
(YGT.Screen3)
@SP
A=M-1
D=M
@XMINUSY.Screen3
D;JGT
@XLEY.Screen3
0;JMP
(XGTY.Screen3)
@SP
A=M-1
M=-1
(END.Screen3)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen4
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen4
D;JLT
(XMINUSY.Screen4)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen4
D;JLT
(XGEY.Screen4)
@SP
A=M-1
D=M
M=0
@END.Screen4
0;JMP
(YLT.Screen4)
@SP
A=M-1
D=M
@XMINUSY.Screen4
D;JLT
@XGEY.Screen4
0;JMP
(XLTY.Screen4)
@SP
A=M-1
M=-1
(END.Screen4)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen5
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen5
D;JGT
(XMINUSY.Screen5)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen5
D;JGT
(XLEY.Screen5)
@SP
A=M-1
D=M
M=0
@END.Screen5
0;JMP
(YGT.Screen5)
@SP
A=M-1
D=M
@XMINUSY.Screen5
D;JGT
@XLEY.Screen5
0;JMP
(XGTY.Screen5)
@SP
A=M-1
M=-1
(END.Screen5)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Screen.drawPixel$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.drawPixel$IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.drawPixel$IF_TRUE0)
//push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Screen.Sys.error$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Screen.Sys.error$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Screen.drawPixel$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Screen.Math.divide$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$RET.3)
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.4)
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.5)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.drawConditional 0
(Screen.drawConditional)
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Screen.drawConditional$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.drawConditional$IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.drawConditional$IF_TRUE0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.drawPixel 2
@Screen.Screen.drawPixel$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.Screen.drawPixel$RET.7)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END0
@Screen.drawConditional$IF_END0
0;JMP
//label IF_FALSE0
(Screen.drawConditional$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.drawPixel 2
@Screen.Screen.drawPixel$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.Screen.drawPixel$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END0
(Screen.drawConditional$IF_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.drawLine 11
(Screen.drawLine)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen6
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen6
D;JLT
(XMINUSY.Screen6)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen6
D;JLT
(XGEY.Screen6)
@SP
A=M-1
D=M
M=0
@END.Screen6
0;JMP
(YLT.Screen6)
@SP
A=M-1
D=M
@XMINUSY.Screen6
D;JLT
@XGEY.Screen6
0;JMP
(XLTY.Screen6)
@SP
A=M-1
M=-1
(END.Screen6)
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen7
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen7
D;JGT
(XMINUSY.Screen7)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen7
D;JGT
(XLEY.Screen7)
@SP
A=M-1
D=M
M=0
@END.Screen7
0;JMP
(YGT.Screen7)
@SP
A=M-1
D=M
@XMINUSY.Screen7
D;JGT
@XLEY.Screen7
0;JMP
(XGTY.Screen7)
@SP
A=M-1
M=-1
(END.Screen7)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen8
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen8
D;JLT
(XMINUSY.Screen8)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen8
D;JLT
(XGEY.Screen8)
@SP
A=M-1
D=M
M=0
@END.Screen8
0;JMP
(YLT.Screen8)
@SP
A=M-1
D=M
@XMINUSY.Screen8
D;JLT
@XGEY.Screen8
0;JMP
(XLTY.Screen8)
@SP
A=M-1
M=-1
(END.Screen8)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen9
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen9
D;JGT
(XMINUSY.Screen9)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen9
D;JGT
(XLEY.Screen9)
@SP
A=M-1
D=M
M=0
@END.Screen9
0;JMP
(YGT.Screen9)
@SP
A=M-1
D=M
@XMINUSY.Screen9
D;JGT
@XLEY.Screen9
0;JMP
(XGTY.Screen9)
@SP
A=M-1
M=-1
(END.Screen9)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Screen.drawLine$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.drawLine$IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.drawLine$IF_TRUE0)
//push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Screen.Sys.error$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Screen.Sys.error$RET.9)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Screen.drawLine$IF_FALSE0)
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call  Math.abs 1
@Screen.Math.abs$RET.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Screen.Math.abs$RET.10)
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call  Math.abs 1
@Screen.Math.abs$RET.11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Screen.Math.abs$RET.11)
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen10
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen10
D;JLT
(XMINUSY.Screen10)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen10
D;JLT
(XGEY.Screen10)
@SP
A=M-1
D=M
M=0
@END.Screen10
0;JMP
(YLT.Screen10)
@SP
A=M-1
D=M
@XMINUSY.Screen10
D;JLT
@XGEY.Screen10
0;JMP
(XLTY.Screen10)
@SP
A=M-1
M=-1
(END.Screen10)
//pop local 6
@LCL
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen11
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen11
D;JLT
(XMINUSY.Screen11)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen11
D;JLT
(XGEY.Screen11)
@SP
A=M-1
D=M
M=0
@END.Screen11
0;JMP
(YLT.Screen11)
@SP
A=M-1
D=M
@XMINUSY.Screen11
D;JLT
@XGEY.Screen11
0;JMP
(XLTY.Screen11)
@SP
A=M-1
M=-1
(END.Screen11)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen12
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen12
D;JLT
(XMINUSY.Screen12)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen12
D;JLT
(XGEY.Screen12)
@SP
A=M-1
D=M
M=0
@END.Screen12
0;JMP
(YLT.Screen12)
@SP
A=M-1
D=M
@XMINUSY.Screen12
D;JLT
@XGEY.Screen12
0;JMP
(XLTY.Screen12)
@SP
A=M-1
M=-1
(END.Screen12)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Screen.drawLine$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Screen.drawLine$IF_FALSE1
0;JMP
//label IF_TRUE1
(Screen.drawLine$IF_TRUE1)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 2
@ARG
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 3
@ARG
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(Screen.drawLine$IF_FALSE1)
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Screen.drawLine$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Screen.drawLine$IF_FALSE2
0;JMP
//label IF_TRUE2
(Screen.drawLine$IF_TRUE2)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 8
@LCL
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen13
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen13
D;JGT
(XMINUSY.Screen13)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen13
D;JGT
(XLEY.Screen13)
@SP
A=M-1
D=M
M=0
@END.Screen13
0;JMP
(YGT.Screen13)
@SP
A=M-1
D=M
@XMINUSY.Screen13
D;JGT
@XLEY.Screen13
0;JMP
(XGTY.Screen13)
@SP
A=M-1
M=-1
(END.Screen13)
//pop local 7
@LCL
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END2
@Screen.drawLine$IF_END2
0;JMP
//label IF_FALSE2
(Screen.drawLine$IF_FALSE2)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 8
@LCL
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen14
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen14
D;JGT
(XMINUSY.Screen14)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen14
D;JGT
(XLEY.Screen14)
@SP
A=M-1
D=M
M=0
@END.Screen14
0;JMP
(YGT.Screen14)
@SP
A=M-1
D=M
@XMINUSY.Screen14
D;JGT
@XLEY.Screen14
0;JMP
(XGTY.Screen14)
@SP
A=M-1
M=-1
(END.Screen14)
//pop local 7
@LCL
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END2
(Screen.drawLine$IF_END2)
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.12)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 5
@LCL
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.13)
//pop local 9
@LCL
D=M
@9
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call  Math.multiply 2
@Screen.Math.multiply$RET.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.14)
//pop local 10
@LCL
D=M
@10
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.drawConditional 3
@Screen.Screen.drawConditional$RET.15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@3
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawConditional
0;JMP
(Screen.Screen.drawConditional$RET.15)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Screen.drawLine$WHILE_EXP0)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 8
@LCL
D=M
@8
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen15
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen15
D;JLT
(XMINUSY.Screen15)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen15
D;JLT
(XGEY.Screen15)
@SP
A=M-1
D=M
M=0
@END.Screen15
0;JMP
(YLT.Screen15)
@SP
A=M-1
D=M
@XMINUSY.Screen15
D;JLT
@XGEY.Screen15
0;JMP
(XLTY.Screen15)
@SP
A=M-1
M=-1
(END.Screen15)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Screen.drawLine$WHILE_END0
D;JNE
//push local 5
@LCL
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen16
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen16
D;JLT
(XMINUSY.Screen16)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen16
D;JLT
(XGEY.Screen16)
@SP
A=M-1
D=M
M=0
@END.Screen16
0;JMP
(YLT.Screen16)
@SP
A=M-1
D=M
@XMINUSY.Screen16
D;JLT
@XGEY.Screen16
0;JMP
(XLTY.Screen16)
@SP
A=M-1
M=-1
(END.Screen16)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@Screen.drawLine$IF_TRUE3
D;JNE
//goto IF_FALSE3
@Screen.drawLine$IF_FALSE3
0;JMP
//label IF_TRUE3
(Screen.drawLine$IF_TRUE3)
//push local 5
@LCL
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 9
@LCL
D=M
@9
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 5
@LCL
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END3
@Screen.drawLine$IF_END3
0;JMP
//label IF_FALSE3
(Screen.drawLine$IF_FALSE3)
//push local 5
@LCL
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 10
@LCL
D=M
@10
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 5
@LCL
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 7
@LCL
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M

@Screen.drawLine$IF_TRUE4
D;JNE
//goto IF_FALSE4
@Screen.drawLine$IF_FALSE4
0;JMP
//label IF_TRUE4
(Screen.drawLine$IF_TRUE4)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END4
@Screen.drawLine$IF_END4
0;JMP
//label IF_FALSE4
(Screen.drawLine$IF_FALSE4)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END4
(Screen.drawLine$IF_END4)
//label IF_END3
(Screen.drawLine$IF_END3)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.drawConditional 3
@Screen.Screen.drawConditional$RET.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@3
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawConditional
0;JMP
(Screen.Screen.drawConditional$RET.16)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Screen.drawLine$WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.drawLine$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.drawRectangle 9
(Screen.drawRectangle)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen17
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen17
D;JGT
(XMINUSY.Screen17)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen17
D;JGT
(XLEY.Screen17)
@SP
A=M-1
D=M
M=0
@END.Screen17
0;JMP
(YGT.Screen17)
@SP
A=M-1
D=M
@XMINUSY.Screen17
D;JGT
@XLEY.Screen17
0;JMP
(XGTY.Screen17)
@SP
A=M-1
M=-1
(END.Screen17)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen18
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen18
D;JGT
(XMINUSY.Screen18)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen18
D;JGT
(XLEY.Screen18)
@SP
A=M-1
D=M
M=0
@END.Screen18
0;JMP
(YGT.Screen18)
@SP
A=M-1
D=M
@XMINUSY.Screen18
D;JGT
@XLEY.Screen18
0;JMP
(XGTY.Screen18)
@SP
A=M-1
M=-1
(END.Screen18)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen19
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen19
D;JLT
(XMINUSY.Screen19)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen19
D;JLT
(XGEY.Screen19)
@SP
A=M-1
D=M
M=0
@END.Screen19
0;JMP
(YLT.Screen19)
@SP
A=M-1
D=M
@XMINUSY.Screen19
D;JLT
@XGEY.Screen19
0;JMP
(XLTY.Screen19)
@SP
A=M-1
M=-1
(END.Screen19)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen20
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen20
D;JGT
(XMINUSY.Screen20)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen20
D;JGT
(XLEY.Screen20)
@SP
A=M-1
D=M
M=0
@END.Screen20
0;JMP
(YGT.Screen20)
@SP
A=M-1
D=M
@XMINUSY.Screen20
D;JGT
@XLEY.Screen20
0;JMP
(XGTY.Screen20)
@SP
A=M-1
M=-1
(END.Screen20)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen21
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen21
D;JLT
(XMINUSY.Screen21)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen21
D;JLT
(XGEY.Screen21)
@SP
A=M-1
D=M
M=0
@END.Screen21
0;JMP
(YLT.Screen21)
@SP
A=M-1
D=M
@XMINUSY.Screen21
D;JLT
@XGEY.Screen21
0;JMP
(XLTY.Screen21)
@SP
A=M-1
M=-1
(END.Screen21)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen22
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen22
D;JGT
(XMINUSY.Screen22)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen22
D;JGT
(XLEY.Screen22)
@SP
A=M-1
D=M
M=0
@END.Screen22
0;JMP
(YGT.Screen22)
@SP
A=M-1
D=M
@XMINUSY.Screen22
D;JGT
@XLEY.Screen22
0;JMP
(XGTY.Screen22)
@SP
A=M-1
M=-1
(END.Screen22)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Screen.drawRectangle$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.drawRectangle$IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.drawRectangle$IF_TRUE0)
//push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Screen.Sys.error$RET.17
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Screen.Sys.error$RET.17)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Screen.drawRectangle$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Screen.Math.divide$RET.18
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$RET.18)
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.19
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.19)
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 7
@LCL
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Screen.Math.divide$RET.20
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$RET.20)
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.21
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.21)
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 8
@LCL
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 7
@LCL
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//not
@SP
A=M-1
M=!M
//pop local 6
@LCL
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 8
@LCL
D=M
@8
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 5
@LCL
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.22
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.22)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Screen.drawRectangle$WHILE_EXP0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen23
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen23
D;JGT
(XMINUSY.Screen23)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen23
D;JGT
(XLEY.Screen23)
@SP
A=M-1
D=M
M=0
@END.Screen23
0;JMP
(YGT.Screen23)
@SP
A=M-1
D=M
@XMINUSY.Screen23
D;JGT
@XLEY.Screen23
0;JMP
(XGTY.Screen23)
@SP
A=M-1
M=-1
(END.Screen23)
//not
@SP
A=M-1
M=!M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Screen.drawRectangle$WHILE_END0
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Screen24
D;JNE
@SP
A=M-1
M=-1
(NEQ.Screen24)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Screen.drawRectangle$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Screen.drawRectangle$IF_FALSE1
0;JMP
//label IF_TRUE1
(Screen.drawRectangle$IF_TRUE1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 5
@LCL
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.23
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.23)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END1
@Screen.drawRectangle$IF_END1
0;JMP
//label IF_FALSE1
(Screen.drawRectangle$IF_FALSE1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.24)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP1
(Screen.drawRectangle$WHILE_EXP1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen25
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen25
D;JLT
(XMINUSY.Screen25)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen25
D;JLT
(XGEY.Screen25)
@SP
A=M-1
D=M
M=0
@END.Screen25
0;JMP
(YLT.Screen25)
@SP
A=M-1
D=M
@XMINUSY.Screen25
D;JLT
@XGEY.Screen25
0;JMP
(XLTY.Screen25)
@SP
A=M-1
M=-1
(END.Screen25)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M

@Screen.drawRectangle$WHILE_END1
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.25
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.25)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP1
@Screen.drawRectangle$WHILE_EXP1
0;JMP
//label WHILE_END1
(Screen.drawRectangle$WHILE_END1)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 5
@LCL
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.26
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.26)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END1
(Screen.drawRectangle$IF_END1)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Screen.drawRectangle$WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.drawRectangle$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.drawHorizontal 11
(Screen.drawHorizontal)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.min 2
@Screen.Math.min$RET.27
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.min
0;JMP
(Screen.Math.min$RET.27)
//pop local 7
@LCL
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.max 2
@Screen.Math.max$RET.28
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.max
0;JMP
(Screen.Math.max$RET.28)
//pop local 8
@LCL
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen26
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen26
D;JGT
(XMINUSY.Screen26)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen26
D;JGT
(XLEY.Screen26)
@SP
A=M-1
D=M
M=0
@END.Screen26
0;JMP
(YGT.Screen26)
@SP
A=M-1
D=M
@XMINUSY.Screen26
D;JGT
@XLEY.Screen26
0;JMP
(XGTY.Screen26)
@SP
A=M-1
M=-1
(END.Screen26)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 256
@256
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen27
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen27
D;JLT
(XMINUSY.Screen27)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen27
D;JLT
(XGEY.Screen27)
@SP
A=M-1
D=M
M=0
@END.Screen27
0;JMP
(YLT.Screen27)
@SP
A=M-1
D=M
@XMINUSY.Screen27
D;JLT
@XGEY.Screen27
0;JMP
(XLTY.Screen27)
@SP
A=M-1
M=-1
(END.Screen27)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//push local 7
@LCL
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 512
@512
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen28
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen28
D;JLT
(XMINUSY.Screen28)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen28
D;JLT
(XGEY.Screen28)
@SP
A=M-1
D=M
M=0
@END.Screen28
0;JMP
(YLT.Screen28)
@SP
A=M-1
D=M
@XMINUSY.Screen28
D;JLT
@XGEY.Screen28
0;JMP
(XLTY.Screen28)
@SP
A=M-1
M=-1
(END.Screen28)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//push local 8
@LCL
D=M
@8
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen29
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen29
D;JGT
(XMINUSY.Screen29)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen29
D;JGT
(XLEY.Screen29)
@SP
A=M-1
D=M
M=0
@END.Screen29
0;JMP
(YGT.Screen29)
@SP
A=M-1
D=M
@XMINUSY.Screen29
D;JGT
@XLEY.Screen29
0;JMP
(XGTY.Screen29)
@SP
A=M-1
M=-1
(END.Screen29)
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Screen.drawHorizontal$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.drawHorizontal$IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.drawHorizontal$IF_TRUE0)
//push local 7
@LCL
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.max 2
@Screen.Math.max$RET.29
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.max
0;JMP
(Screen.Math.max$RET.29)
//pop local 7
@LCL
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 8
@LCL
D=M
@8
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.min 2
@Screen.Math.min$RET.30
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.min
0;JMP
(Screen.Math.min$RET.30)
//pop local 8
@LCL
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 7
@LCL
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Screen.Math.divide$RET.31
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$RET.31)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 7
@LCL
D=M
@7
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.32
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.32)
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 9
@LCL
D=M
@9
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 8
@LCL
D=M
@8
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@Screen.Math.divide$RET.33
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$RET.33)
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 8
@LCL
D=M
@8
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.34
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.34)
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 10
@LCL
D=M
@10
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 9
@LCL
D=M
@9
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//not
@SP
A=M-1
M=!M
//pop local 5
@LCL
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 10
@LCL
D=M
@10
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.35
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.35)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 6
@LCL
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 6
@LCL
D=M
@6
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.Screen30
D;JNE
@SP
A=M-1
M=-1
(NEQ.Screen30)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Screen.drawHorizontal$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Screen.drawHorizontal$IF_FALSE1
0;JMP
//label IF_TRUE1
(Screen.drawHorizontal$IF_TRUE1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 5
@LCL
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.36
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.36)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END1
@Screen.drawHorizontal$IF_END1
0;JMP
//label IF_FALSE1
(Screen.drawHorizontal$IF_FALSE1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 5
@LCL
D=M
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.37
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.37)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Screen.drawHorizontal$WHILE_EXP0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen31
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen31
D;JLT
(XMINUSY.Screen31)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen31
D;JLT
(XGEY.Screen31)
@SP
A=M-1
D=M
M=0
@END.Screen31
0;JMP
(YLT.Screen31)
@SP
A=M-1
D=M
@XMINUSY.Screen31
D;JLT
@XGEY.Screen31
0;JMP
(XLTY.Screen31)
@SP
A=M-1
M=-1
(END.Screen31)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Screen.drawHorizontal$WHILE_END0
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.38
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.38)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Screen.drawHorizontal$WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.drawHorizontal$WHILE_END0)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.updateLocation 2
@Screen.Screen.updateLocation$RET.39
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateLocation
0;JMP
(Screen.Screen.updateLocation$RET.39)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END1
(Screen.drawHorizontal$IF_END1)
//label IF_FALSE0
(Screen.drawHorizontal$IF_FALSE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.drawSymetric 0
(Screen.drawSymetric)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call  Screen.drawHorizontal 3
@Screen.Screen.drawHorizontal$RET.40
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@3
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(Screen.Screen.drawHorizontal$RET.40)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call  Screen.drawHorizontal 3
@Screen.Screen.drawHorizontal$RET.41
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@3
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(Screen.Screen.drawHorizontal$RET.41)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawHorizontal 3
@Screen.Screen.drawHorizontal$RET.42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@3
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(Screen.Screen.drawHorizontal$RET.42)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 3
@ARG
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//call  Screen.drawHorizontal 3
@Screen.Screen.drawHorizontal$RET.43
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@3
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawHorizontal
0;JMP
(Screen.Screen.drawHorizontal$RET.43)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Screen.drawCircle 3
(Screen.drawCircle)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen32
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen32
D;JLT
(XMINUSY.Screen32)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen32
D;JLT
(XGEY.Screen32)
@SP
A=M-1
D=M
M=0
@END.Screen32
0;JMP
(YLT.Screen32)
@SP
A=M-1
D=M
@XMINUSY.Screen32
D;JLT
@XGEY.Screen32
0;JMP
(XLTY.Screen32)
@SP
A=M-1
M=-1
(END.Screen32)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen33
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen33
D;JGT
(XMINUSY.Screen33)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen33
D;JGT
(XLEY.Screen33)
@SP
A=M-1
D=M
M=0
@END.Screen33
0;JMP
(YGT.Screen33)
@SP
A=M-1
D=M
@XMINUSY.Screen33
D;JGT
@XLEY.Screen33
0;JMP
(XGTY.Screen33)
@SP
A=M-1
M=-1
(END.Screen33)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen34
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen34
D;JLT
(XMINUSY.Screen34)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen34
D;JLT
(XGEY.Screen34)
@SP
A=M-1
D=M
M=0
@END.Screen34
0;JMP
(YLT.Screen34)
@SP
A=M-1
D=M
@XMINUSY.Screen34
D;JLT
@XGEY.Screen34
0;JMP
(XLTY.Screen34)
@SP
A=M-1
M=-1
(END.Screen34)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen35
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen35
D;JGT
(XMINUSY.Screen35)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen35
D;JGT
(XLEY.Screen35)
@SP
A=M-1
D=M
M=0
@END.Screen35
0;JMP
(YGT.Screen35)
@SP
A=M-1
D=M
@XMINUSY.Screen35
D;JGT
@XLEY.Screen35
0;JMP
(XGTY.Screen35)
@SP
A=M-1
M=-1
(END.Screen35)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Screen.drawCircle$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Screen.drawCircle$IF_FALSE0
0;JMP
//label IF_TRUE0
(Screen.drawCircle$IF_TRUE0)
//push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Screen.Sys.error$RET.44
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Screen.Sys.error$RET.44)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Screen.drawCircle$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen36
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen36
D;JLT
(XMINUSY.Screen36)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen36
D;JLT
(XGEY.Screen36)
@SP
A=M-1
D=M
M=0
@END.Screen36
0;JMP
(YLT.Screen36)
@SP
A=M-1
D=M
@XMINUSY.Screen36
D;JLT
@XGEY.Screen36
0;JMP
(XLTY.Screen36)
@SP
A=M-1
M=-1
(END.Screen36)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen37
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen37
D;JGT
(XMINUSY.Screen37)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen37
D;JGT
(XLEY.Screen37)
@SP
A=M-1
D=M
M=0
@END.Screen37
0;JMP
(YGT.Screen37)
@SP
A=M-1
D=M
@XMINUSY.Screen37
D;JGT
@XLEY.Screen37
0;JMP
(XGTY.Screen37)
@SP
A=M-1
M=-1
(END.Screen37)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen38
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen38
D;JLT
(XMINUSY.Screen38)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen38
D;JLT
(XGEY.Screen38)
@SP
A=M-1
D=M
M=0
@END.Screen38
0;JMP
(YLT.Screen38)
@SP
A=M-1
D=M
@XMINUSY.Screen38
D;JLT
@XGEY.Screen38
0;JMP
(XLTY.Screen38)
@SP
A=M-1
M=-1
(END.Screen38)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen39
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen39
D;JGT
(XMINUSY.Screen39)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen39
D;JGT
(XLEY.Screen39)
@SP
A=M-1
D=M
M=0
@END.Screen39
0;JMP
(YGT.Screen39)
@SP
A=M-1
D=M
@XMINUSY.Screen39
D;JGT
@XLEY.Screen39
0;JMP
(XGTY.Screen39)
@SP
A=M-1
M=-1
(END.Screen39)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@Screen.drawCircle$IF_TRUE1
D;JNE
//goto IF_FALSE1
@Screen.drawCircle$IF_FALSE1
0;JMP
//label IF_TRUE1
(Screen.drawCircle$IF_TRUE1)
//push constant 13
@13
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Screen.Sys.error$RET.45
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Screen.Sys.error$RET.45)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(Screen.drawCircle$IF_FALSE1)
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.drawSymetric 4
@Screen.Screen.drawSymetric$RET.46
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawSymetric
0;JMP
(Screen.Screen.drawSymetric$RET.46)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(Screen.drawCircle$WHILE_EXP0)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Screen40
D;JGT
@SP
A=M-1
D=M
@XGTY.Screen40
D;JGT
(XMINUSY.Screen40)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Screen40
D;JGT
(XLEY.Screen40)
@SP
A=M-1
D=M
M=0
@END.Screen40
0;JMP
(YGT.Screen40)
@SP
A=M-1
D=M
@XMINUSY.Screen40
D;JGT
@XLEY.Screen40
0;JMP
(XGTY.Screen40)
@SP
A=M-1
M=-1
(END.Screen40)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Screen.drawCircle$WHILE_END0
D;JNE
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Screen41
D;JLT
@SP
A=M-1
D=M
@XLTY.Screen41
D;JLT
(XMINUSY.Screen41)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Screen41
D;JLT
(XGEY.Screen41)
@SP
A=M-1
D=M
M=0
@END.Screen41
0;JMP
(YLT.Screen41)
@SP
A=M-1
D=M
@XMINUSY.Screen41
D;JLT
@XGEY.Screen41
0;JMP
(XLTY.Screen41)
@SP
A=M-1
M=-1
(END.Screen41)
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@Screen.drawCircle$IF_TRUE2
D;JNE
//goto IF_FALSE2
@Screen.drawCircle$IF_FALSE2
0;JMP
//label IF_TRUE2
(Screen.drawCircle$IF_TRUE2)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@Screen.Math.multiply$RET.47
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.47)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END2
@Screen.drawCircle$IF_END2
0;JMP
//label IF_FALSE2
(Screen.drawCircle$IF_FALSE2)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call  Math.multiply 2
@Screen.Math.multiply$RET.48
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$RET.48)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_END2
(Screen.drawCircle$IF_END2)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Screen.drawSymetric 4
@Screen.Screen.drawSymetric$RET.49
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@4
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawSymetric
0;JMP
(Screen.Screen.drawSymetric$RET.49)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Screen.drawCircle$WHILE_EXP0
0;JMP
//label WHILE_END0
(Screen.drawCircle$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@String.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(String.Sys.init$RET.0)
//function String.new 0
(String.new)
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//call  Memory.alloc 1
@String.Memory.alloc$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(String.Memory.alloc$RET.1)
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.String0
D;JLT
@SP
A=M-1
D=M
@XLTY.String0
D;JLT
(XMINUSY.String0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.String0
D;JLT
(XGEY.String0)
@SP
A=M-1
D=M
M=0
@END.String0
0;JMP
(YLT.String0)
@SP
A=M-1
D=M
@XMINUSY.String0
D;JLT
@XGEY.String0
0;JMP
(XLTY.String0)
@SP
A=M-1
M=-1
(END.String0)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@String.new$IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.new$IF_FALSE0
0;JMP
//label IF_TRUE0
(String.new$IF_TRUE0)
//push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@String.Sys.error$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(String.Sys.error$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(String.new$IF_FALSE0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.String1
D;JGT
@SP
A=M-1
D=M
@XGTY.String1
D;JGT
(XMINUSY.String1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.String1
D;JGT
(XLEY.String1)
@SP
A=M-1
D=M
M=0
@END.String1
0;JMP
(YGT.String1)
@SP
A=M-1
D=M
@XMINUSY.String1
D;JGT
@XLEY.String1
0;JMP
(XGTY.String1)
@SP
A=M-1
M=-1
(END.String1)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@String.new$IF_TRUE1
D;JNE
//goto IF_FALSE1
@String.new$IF_FALSE1
0;JMP
//label IF_TRUE1
(String.new$IF_TRUE1)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@String.Array.new$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(String.Array.new$RET.3)
//pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(String.new$IF_FALSE1)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.dispose 0
(String.dispose)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.String2
D;JGT
@SP
A=M-1
D=M
@XGTY.String2
D;JGT
(XMINUSY.String2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.String2
D;JGT
(XLEY.String2)
@SP
A=M-1
D=M
M=0
@END.String2
0;JMP
(YGT.String2)
@SP
A=M-1
D=M
@XMINUSY.String2
D;JGT
@XLEY.String2
0;JMP
(XGTY.String2)
@SP
A=M-1
M=-1
(END.String2)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@String.dispose$IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.dispose$IF_FALSE0
0;JMP
//label IF_TRUE0
(String.dispose$IF_TRUE0)
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Array.dispose 1
@String.Array.dispose$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(String.Array.dispose$RET.4)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(String.dispose$IF_FALSE0)
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//call  Memory.deAlloc 1
@String.Memory.deAlloc$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(String.Memory.deAlloc$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.length 0
(String.length)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.charAt 0
(String.charAt)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.String3
D;JLT
@SP
A=M-1
D=M
@XLTY.String3
D;JLT
(XMINUSY.String3)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.String3
D;JLT
(XGEY.String3)
@SP
A=M-1
D=M
M=0
@END.String3
0;JMP
(YLT.String3)
@SP
A=M-1
D=M
@XMINUSY.String3
D;JLT
@XGEY.String3
0;JMP
(XLTY.String3)
@SP
A=M-1
M=-1
(END.String3)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.String4
D;JGT
@SP
A=M-1
D=M
@XGTY.String4
D;JGT
(XMINUSY.String4)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.String4
D;JGT
(XLEY.String4)
@SP
A=M-1
D=M
M=0
@END.String4
0;JMP
(YGT.String4)
@SP
A=M-1
D=M
@XMINUSY.String4
D;JGT
@XLEY.String4
0;JMP
(XGTY.String4)
@SP
A=M-1
M=-1
(END.String4)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.String5
D;JNE
@SP
A=M-1
M=-1
(NEQ.String5)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@String.charAt$IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.charAt$IF_FALSE0
0;JMP
//label IF_TRUE0
(String.charAt$IF_TRUE0)
//push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@String.Sys.error$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(String.Sys.error$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(String.charAt$IF_FALSE0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.setCharAt 0
(String.setCharAt)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.String6
D;JLT
@SP
A=M-1
D=M
@XLTY.String6
D;JLT
(XMINUSY.String6)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.String6
D;JLT
(XGEY.String6)
@SP
A=M-1
D=M
M=0
@END.String6
0;JMP
(YLT.String6)
@SP
A=M-1
D=M
@XMINUSY.String6
D;JLT
@XGEY.String6
0;JMP
(XLTY.String6)
@SP
A=M-1
M=-1
(END.String6)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.String7
D;JGT
@SP
A=M-1
D=M
@XGTY.String7
D;JGT
(XMINUSY.String7)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.String7
D;JGT
(XLEY.String7)
@SP
A=M-1
D=M
M=0
@END.String7
0;JMP
(YGT.String7)
@SP
A=M-1
D=M
@XMINUSY.String7
D;JGT
@XLEY.String7
0;JMP
(XGTY.String7)
@SP
A=M-1
M=-1
(END.String7)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.String8
D;JNE
@SP
A=M-1
M=-1
(NEQ.String8)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@String.setCharAt$IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.setCharAt$IF_FALSE0
0;JMP
//label IF_TRUE0
(String.setCharAt$IF_TRUE0)
//push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@String.Sys.error$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(String.Sys.error$RET.7)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(String.setCharAt$IF_FALSE0)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 2
@ARG
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.appendChar 0
(String.appendChar)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.String9
D;JNE
@SP
A=M-1
M=-1
(NEQ.String9)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@String.appendChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.appendChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(String.appendChar$IF_TRUE0)
//push constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@String.Sys.error$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(String.Sys.error$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(String.appendChar$IF_FALSE0)
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.eraseLastChar 0
(String.eraseLastChar)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.String10
D;JNE
@SP
A=M-1
M=-1
(NEQ.String10)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@String.eraseLastChar$IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.eraseLastChar$IF_FALSE0
0;JMP
//label IF_TRUE0
(String.eraseLastChar$IF_TRUE0)
//push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@String.Sys.error$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(String.Sys.error$RET.9)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(String.eraseLastChar$IF_FALSE0)
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.intValue 5
(String.intValue)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.String11
D;JNE
@SP
A=M-1
M=-1
(NEQ.String11)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@String.intValue$IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.intValue$IF_FALSE0
0;JMP
//label IF_TRUE0
(String.intValue$IF_TRUE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//label IF_FALSE0
(String.intValue$IF_FALSE0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.String12
D;JNE
@SP
A=M-1
M=-1
(NEQ.String12)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@String.intValue$IF_TRUE1
D;JNE
//goto IF_FALSE1
@String.intValue$IF_FALSE1
0;JMP
//label IF_TRUE1
(String.intValue$IF_TRUE1)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(String.intValue$IF_FALSE1)
//label WHILE_EXP0
(String.intValue$WHILE_EXP0)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.String13
D;JLT
@SP
A=M-1
D=M
@XLTY.String13
D;JLT
(XMINUSY.String13)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.String13
D;JLT
(XGEY.String13)
@SP
A=M-1
D=M
M=0
@END.String13
0;JMP
(YLT.String13)
@SP
A=M-1
D=M
@XMINUSY.String13
D;JLT
@XGEY.String13
0;JMP
(XLTY.String13)
@SP
A=M-1
M=-1
(END.String13)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@String.intValue$WHILE_END0
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.String14
D;JLT
@SP
A=M-1
D=M
@XLTY.String14
D;JLT
(XMINUSY.String14)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.String14
D;JLT
(XGEY.String14)
@SP
A=M-1
D=M
M=0
@END.String14
0;JMP
(YLT.String14)
@SP
A=M-1
D=M
@XMINUSY.String14
D;JLT
@XGEY.String14
0;JMP
(XLTY.String14)
@SP
A=M-1
M=-1
(END.String14)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.String15
D;JGT
@SP
A=M-1
D=M
@XGTY.String15
D;JGT
(XMINUSY.String15)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.String15
D;JGT
(XLEY.String15)
@SP
A=M-1
D=M
M=0
@END.String15
0;JMP
(YGT.String15)
@SP
A=M-1
D=M
@XMINUSY.String15
D;JGT
@XLEY.String15
0;JMP
(XGTY.String15)
@SP
A=M-1
M=-1
(END.String15)
//or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
//not
@SP
A=M-1
M=!M
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@String.intValue$IF_TRUE2
D;JNE
//goto IF_FALSE2
@String.intValue$IF_FALSE2
0;JMP
//label IF_TRUE2
(String.intValue$IF_TRUE2)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@String.Math.multiply$RET.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(String.Math.multiply$RET.10)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE2
(String.intValue$IF_FALSE2)
//goto WHILE_EXP0
@String.intValue$WHILE_EXP0
0;JMP
//label WHILE_END0
(String.intValue$WHILE_END0)
//push local 4
@LCL
D=M
@4
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@String.intValue$IF_TRUE3
D;JNE
//goto IF_FALSE3
@String.intValue$IF_FALSE3
0;JMP
//label IF_TRUE3
(String.intValue$IF_TRUE3)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE3
(String.intValue$IF_FALSE3)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.setInt 4
(String.setInt)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.String16
D;JNE
@SP
A=M-1
M=-1
(NEQ.String16)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@String.setInt$IF_TRUE0
D;JNE
//goto IF_FALSE0
@String.setInt$IF_FALSE0
0;JMP
//label IF_TRUE0
(String.setInt$IF_TRUE0)
//push constant 19
@19
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@String.Sys.error$RET.11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(String.Sys.error$RET.11)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(String.setInt$IF_FALSE0)
//push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
//call  Array.new 1
@String.Array.new$RET.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(String.Array.new$RET.12)
//pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.String17
D;JLT
@SP
A=M-1
D=M
@XLTY.String17
D;JLT
(XMINUSY.String17)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.String17
D;JLT
(XGEY.String17)
@SP
A=M-1
D=M
M=0
@END.String17
0;JMP
(YLT.String17)
@SP
A=M-1
D=M
@XMINUSY.String17
D;JLT
@XGEY.String17
0;JMP
(XLTY.String17)
@SP
A=M-1
M=-1
(END.String17)
//if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M

@String.setInt$IF_TRUE1
D;JNE
//goto IF_FALSE1
@String.setInt$IF_FALSE1
0;JMP
//label IF_TRUE1
(String.setInt$IF_TRUE1)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//neg
@SP
A=M-1
M=-M
//pop argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE1
(String.setInt$IF_FALSE1)
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP0
(String.setInt$WHILE_EXP0)
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.String18
D;JGT
@SP
A=M-1
D=M
@XGTY.String18
D;JGT
(XMINUSY.String18)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.String18
D;JGT
(XLEY.String18)
@SP
A=M-1
D=M
M=0
@END.String18
0;JMP
(YGT.String18)
@SP
A=M-1
D=M
@XMINUSY.String18
D;JGT
@XLEY.String18
0;JMP
(XGTY.String18)
@SP
A=M-1
M=-1
(END.String18)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@String.setInt$WHILE_END0
D;JNE
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.divide 2
@String.Math.divide$RET.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(String.Math.divide$RET.13)
//pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
//call  Math.multiply 2
@String.Math.multiply$RET.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(String.Math.multiply$RET.14)
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 1
@LCL
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@String.setInt$WHILE_EXP0
0;JMP
//label WHILE_END0
(String.setInt$WHILE_END0)
//push local 3
@LCL
D=M
@3
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M

@String.setInt$IF_TRUE2
D;JNE
//goto IF_FALSE2
@String.setInt$IF_FALSE2
0;JMP
//label IF_TRUE2
(String.setInt$IF_TRUE2)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE2
(String.setInt$IF_FALSE2)
//push this 0
@THIS
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.String19
D;JLT
@SP
A=M-1
D=M
@XLTY.String19
D;JLT
(XMINUSY.String19)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.String19
D;JLT
(XGEY.String19)
@SP
A=M-1
D=M
M=0
@END.String19
0;JMP
(YLT.String19)
@SP
A=M-1
D=M
@XMINUSY.String19
D;JLT
@XGEY.String19
0;JMP
(XLTY.String19)
@SP
A=M-1
M=-1
(END.String19)
//if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M

@String.setInt$IF_TRUE3
D;JNE
//goto IF_FALSE3
@String.setInt$IF_FALSE3
0;JMP
//label IF_TRUE3
(String.setInt$IF_TRUE3)
//push constant 19
@19
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@String.Sys.error$RET.15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(String.Sys.error$RET.15)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE3
(String.setInt$IF_FALSE3)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@NEQ.String20
D;JNE
@SP
A=M-1
M=-1
(NEQ.String20)
//if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M

@String.setInt$IF_TRUE4
D;JNE
//goto IF_FALSE4
@String.setInt$IF_FALSE4
0;JMP
//label IF_TRUE4
(String.setInt$IF_TRUE4)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto IF_END4
@String.setInt$IF_END4
0;JMP
//label IF_FALSE4
(String.setInt$IF_FALSE4)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP1
(String.setInt$WHILE_EXP1)
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.String21
D;JLT
@SP
A=M-1
D=M
@XLTY.String21
D;JLT
(XMINUSY.String21)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.String21
D;JLT
(XGEY.String21)
@SP
A=M-1
D=M
M=0
@END.String21
0;JMP
(YLT.String21)
@SP
A=M-1
D=M
@XMINUSY.String21
D;JLT
@XGEY.String21
0;JMP
(XLTY.String21)
@SP
A=M-1
M=-1
(END.String21)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M

@String.setInt$WHILE_END1
D;JNE
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 1
@THIS
D=M
@1
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push that 0
@THAT
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
//push temp 0
@R5
D=A
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//pop that 0
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push this 2
@THIS
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=M+D
//pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP1
@String.setInt$WHILE_EXP1
0;JMP
//label WHILE_END1
(String.setInt$WHILE_END1)
//label IF_END4
(String.setInt$IF_END4)
//push local 2
@LCL
D=M
@2
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Array.dispose 1
@String.Array.dispose$RET.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(String.Array.dispose$RET.16)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.newLine 0
(String.newLine)
//push constant 128
@128
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.backSpace 0
(String.backSpace)
//push constant 129
@129
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function String.doubleQuote 0
(String.doubleQuote)
//push constant 34
@34
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// initialize the stack pointer to 0x0100
@256
D=A
@SP
M=D
// invoke Sys.init
//call  Sys.init 0
@Sys.Sys.init$RET.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.Sys.init$RET.0)
//function Sys.init 0
(Sys.init)
//call  Memory.init 0
@Sys.Memory.init$RET.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.init
0;JMP
(Sys.Memory.init$RET.1)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  Math.init 0
@Sys.Math.init$RET.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.init
0;JMP
(Sys.Math.init$RET.2)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  Screen.init 0
@Sys.Screen.init$RET.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.init
0;JMP
(Sys.Screen.init$RET.3)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  Output.init 0
@Sys.Output.init$RET.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.init
0;JMP
(Sys.Output.init$RET.4)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  Keyboard.init 0
@Sys.Keyboard.init$RET.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.init
0;JMP
(Sys.Keyboard.init$RET.5)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  Main.main 0
@Sys.Main.main$RET.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.main
0;JMP
(Sys.Main.main$RET.6)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  Sys.halt 0
@Sys.Sys.halt$RET.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(Sys.Sys.halt$RET.7)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Sys.halt 0
(Sys.halt)
//label WHILE_EXP0
(Sys.halt$WHILE_EXP0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//not
@SP
A=M-1
M=!M
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Sys.halt$WHILE_END0
D;JNE
//goto WHILE_EXP0
@Sys.halt$WHILE_EXP0
0;JMP
//label WHILE_END0
(Sys.halt$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Sys.wait 1
(Sys.wait)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//lt
@SP
M=M-1
A=M
D=M
@YLT.Sys0
D;JLT
@SP
A=M-1
D=M
@XLTY.Sys0
D;JLT
(XMINUSY.Sys0)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XLTY.Sys0
D;JLT
(XGEY.Sys0)
@SP
A=M-1
D=M
M=0
@END.Sys0
0;JMP
(YLT.Sys0)
@SP
A=M-1
D=M
@XMINUSY.Sys0
D;JLT
@XGEY.Sys0
0;JMP
(XLTY.Sys0)
@SP
A=M-1
M=-1
(END.Sys0)
//if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M

@Sys.wait$IF_TRUE0
D;JNE
//goto IF_FALSE0
@Sys.wait$IF_FALSE0
0;JMP
//label IF_TRUE0
(Sys.wait$IF_TRUE0)
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//call  Sys.error 1
@Sys.Sys.error$RET.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.error
0;JMP
(Sys.Sys.error$RET.8)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label IF_FALSE0
(Sys.wait$IF_FALSE0)
//label WHILE_EXP0
(Sys.wait$WHILE_EXP0)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Sys1
D;JGT
@SP
A=M-1
D=M
@XGTY.Sys1
D;JGT
(XMINUSY.Sys1)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Sys1
D;JGT
(XLEY.Sys1)
@SP
A=M-1
D=M
M=0
@END.Sys1
0;JMP
(YGT.Sys1)
@SP
A=M-1
D=M
@XMINUSY.Sys1
D;JGT
@XLEY.Sys1
0;JMP
(XGTY.Sys1)
@SP
A=M-1
M=-1
(END.Sys1)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END0
@SP
M=M-1
A=M
D=M

@Sys.wait$WHILE_END0
D;JNE
//push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//label WHILE_EXP1
(Sys.wait$WHILE_EXP1)
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//gt
@SP
M=M-1
A=M
D=M
@YGT.Sys2
D;JGT
@SP
A=M-1
D=M
@XGTY.Sys2
D;JGT
(XMINUSY.Sys2)
@SP
A=M-1
D=M
A=A+1
D=D-M
@XGTY.Sys2
D;JGT
(XLEY.Sys2)
@SP
A=M-1
D=M
M=0
@END.Sys2
0;JMP
(YGT.Sys2)
@SP
A=M-1
D=M
@XMINUSY.Sys2
D;JGT
@XLEY.Sys2
0;JMP
(XGTY.Sys2)
@SP
A=M-1
M=-1
(END.Sys2)
//not
@SP
A=M-1
M=!M
//if-goto WHILE_END1
@SP
M=M-1
A=M
D=M

@Sys.wait$WHILE_END1
D;JNE
//push local 0
@LCL
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP1
@Sys.wait$WHILE_EXP1
0;JMP
//label WHILE_END1
(Sys.wait$WHILE_END1)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//pop argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//goto WHILE_EXP0
@Sys.wait$WHILE_EXP0
0;JMP
//label WHILE_END0
(Sys.wait$WHILE_END0)
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//function Sys.error 0
(Sys.error)
//push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.new 1
@Sys.String.new$RET.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(Sys.String.new$RET.9)
//push constant 69
@69
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@Sys.String.appendChar$RET.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$RET.10)
//push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@Sys.String.appendChar$RET.11
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$RET.11)
//push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
//call  String.appendChar 2
@Sys.String.appendChar$RET.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$RET.12)
//call  Output.printString 1
@Sys.Output.printString$RET.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Sys.Output.printString$RET.13)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//call  Output.printInt 1
@Sys.Output.printInt$RET.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(Sys.Output.printInt$RET.14)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call  Sys.halt 0
@Sys.Sys.halt$RET.15
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(Sys.Sys.halt$RET.15)
//pop temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
//return
@LCL
D=M
@R15
M=D
@5
D=A
@R15
D=M-D
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
A=M-1
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP

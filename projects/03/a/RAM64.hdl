// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=out0, b=out1, c=out2,
        d=out3, e=out4, f=out5, g=out6, h=out7);
    RAM8(in=in, load=out0, address=address[0..2], out=mux1);
    RAM8(in=in, load=out1, address=address[0..2], out=mux2);
    RAM8(in=in, load=out2, address=address[0..2], out=mux3);
    RAM8(in=in, load=out3, address=address[0..2], out=mux4);
    RAM8(in=in, load=out4, address=address[0..2], out=mux5);
    RAM8(in=in, load=out5, address=address[0..2], out=mux6);
    RAM8(in=in, load=out6, address=address[0..2], out=mux7);
    RAM8(in=in, load=out7, address=address[0..2], out=mux8);
    Mux8Way16(a=mux1, b=mux2, c=mux3, d=mux4,
        e=mux5, f=mux6, g=mux7, h=mux8, sel=address[3..5], out=out);  
}